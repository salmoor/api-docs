openapi: 3.0.0
info:
  description: Bakkal API
  title: Bakkal API
  version: 1.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/bakkal/BAKKAL_API/1.0.0
  - description: Production API Server
    url: https://izmir.bakkal.us
components:
  securitySchemes:
    bearerAuth:
      bearerFormat: Sanctum
      scheme: bearer
      type: http
paths:
  /accepted-orders:
    post:
      description: Accept order by admin
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 1
                type: orders
            schema:
              properties:
                data:
                  properties:
                    id:
                      type: integer
                    type:
                      type: string
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
  /account-deletion-requests:
    post:
      description: Submit Account Deletion request
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  consumer_id: 20
                  request_message: message
                type: account_deletion_requests
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        consumer_id:
                          type: integer
                        request_message:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    message: Request for account deletion has been accepted
                  type: account_deletion_requests
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          message:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
          description: Account deletion sumbission confirmation message
  /active-coupons/{code}:
    get:
      description: Check coupon availability. The endpoint is kept for backwards compatibility. The replacement is one below. Consumer can apply each promoCode only once!
      parameters:
        - description: Code user wants to apply
          example: coupong
          in: path
          name: code
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/couponResource"
        "400":
          description: When promo code is not available
      security:
        - bearerAuth: []
  /active-promo-codes/{code}:
    get:
      description: Check promo code availability. Consumer can apply each promoCode only once! `filter[stores]` query parameter should be set to validate store specific promo codes.
      parameters:
        - description: Code user wants to apply
          example: coupong
          in: path
          name: code
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/filterByStores"
        - $ref: "./parameters.yml#/filterByAddress"
      responses:
        "200":
          $ref: "./responses.yml#/promoCodeResource"
        "400":
          description: When promo code is not available
      security:
        - bearerAuth: []
  /active-stores:
    post:
      description: Activate the store if it is "Inactive". For Admins only.
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 20
                type: active_stores
            schema:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/storeResource"
  /active-stores/{id}:
    delete:
      description: Deactivate the store if it is "Active". For Admins only.
      parameters:
        - description: id of store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/storeResource"
  /addresses/{id}:
    delete:
      description: Soft delete Address object
      parameters:
        - description: Id of an address
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/addressResource"
    get:
      description: Get Address object
      parameters:
        - description: Id of an address
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/addressResource"
    patch:
      description: Update Address object. Only fields that are to change are required.
      parameters:
        - description: Id of an address
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  address: Death Star
                  building_number: "27"
                  landmark: Giant Laser
                  nickname: ""
                type: addresses
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        address:
                          type: string
                        building_number:
                          type: string
                        landmark:
                          type: string
                        latitude:
                          type: string
                        longitude:
                          type: string
                        nickname:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/addressResource"
  /administrators:
    get:
      description: Get list of administrators
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/includeAdministrator"
      responses:
        "200":
          $ref: "./responses.yml#/administratorResources"
  /administrators/{id}:
    delete:
      description: Delete administrator resource (soft deletion)
      parameters:
        - description: id of Administrator
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/administratorResource"
    get:
      description: Get administrator resource
      parameters:
        - description: id of Administrator
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeAdministrator"
      responses:
        "200":
          $ref: "./responses.yml#/administratorResource"
  /areas:
    get:
      description: List areas
      parameters:
        - $ref: "./parameters.yml#/limit"
      responses:
        "200":
          $ref: "./responses.yml#/areaResources"
    post:
      description: Create area
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "areas"
                attributes:
                  title: "title"
                  polygon: "POLYGON((8 0, 3 1, 0 2, 8 0))"
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        polygon:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/areaResource"
  /areas:search:
    get:
      description: Search areas by title
      parameters:
        - description: Search query
          example: 123
          in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/areaResources"
  /areas/{id}:
    get:
      description: Show an area
      parameters:
        - description: Id of an area
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/areaResource"
    patch:
      description: Update an area
      parameters:
        - description: Id of an area
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "areas"
                attributes:
                  title: "title"
                  polygon: "POLYGON((8 0, 3 1, 0 2, 8 0))"
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        polygon:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/areaResource"
    delete:
      description: Delete an area
      parameters:
        - description: Id of an area
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /audience-database-notifications:
    post:
      description: Send audience database notification
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "audience_database_notifications"
                attributes:
                  title: "title"
                  body: "body"
                relationships:
                  audience:
                    data:
                      id: 1
                      type: "audiences"
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        body:
                          type: string
                    relationships:
                      properties:
                        audience:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
      responses:
        "200":
          description: successful request
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    status: "Notifications sent"
                  type: audience_database_notifications
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
  /audience-mails:
    post:
      description: Send audience mail
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "audience_mails"
                attributes:
                  title: "title"
                  body: "body"
                relationships:
                  audience:
                    data:
                      audience_id: 1
                      area_id: 1
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        body:
                          type: string
                    relationships:
                      properties:
                        audience:
                          properties:
                            data:
                              properties:
                                audience_id:
                                  type: integer
                                area_id:
                                  type: integer
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
      responses:
        "200":
          description: successful request
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    status: "Notifications sent"
                  type: audience_mails
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
  /audience-notifications:
    post:
      description: Send audience notification
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "audience-notifications"
                attributes:
                  title: "title"
                  body: "body"
                relationships:
                  audience:
                    data:
                      audience_id: 1
                      area_id: 1
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        body:
                          type: string
                    relationships:
                      properties:
                        audience:
                          properties:
                            data:
                              properties:
                                audience_id:
                                  type: integer
                                area_id:
                                  type: integer
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
      responses:
        "200":
          description: successful request
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    status: "Notifications sent"
                  type: audience_notifications
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
  /audience-sms-notifications:
    post:
      description: Send audience sms notification
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "audience_sms_notifications"
                attributes:
                  body: "body"
                relationships:
                  audience:
                    data:
                      audience_id: 1
                      area_id: 1
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        body:
                          type: string
                    relationships:
                      properties:
                        audience:
                          properties:
                            data:
                              properties:
                                audience_id:
                                  type: integer
                                area_id:
                                  type: integer
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
      responses:
        "200":
          description: successful request
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    status: "Notifications sent"
                  type: audience_sms_notifications
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
  /audiences:
    get:
      description: List audiences
      parameters:
        - $ref: "./parameters.yml#/limit"
      responses:
        "200":
          $ref: "./responses.yml#/audienceResources"
    post:
      description: Create audience
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "audiences"
                attributes:
                  title: "title"
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/audienceResource"
  /audiences/{id}:
    get:
      description: Show an audience
      parameters:
        - description: Id of an audience
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/audienceResource"
    patch:
      description: Update an audience
      parameters:
        - description: Id of an audience
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "audiences"
                attributes:
                  title: "title"
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/audienceResource"
    delete:
      description: Delete an audience
      parameters:
        - description: Id of an audience
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /banners:
    get:
      description: LIST Banners
      parameters:
        - description: ""
          example: true
          in: query
          name: is_active
          required: false
          schema:
            type: boolean
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/sortBanner"
        - $ref: "./parameters.yml#/includeBanner"
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                example:
                  data:
                    - attributes:
                        image: https://images.com/banners/image.png
                        title: "Title"
                        status: "Active"
                        display_order: 3
                        route: "/products/5"
                      id: 1
                      type: banners
                      relationships:
                        banner_image:
                          data:
                            id: 1
                            type: banner_images
                        banner_web_image:
                          data:
                            id: 3
                            type: banner_web_images    
                    - attributes:
                        image: https://images.com/banners/image.png
                        title: "title"
                        status: "Inactive"
                        display_order: 8
                        route: "/stores/5"
                      id: 2
                      type: banners
                      relationships:
                        banner_image:
                          data:
                            id: 3
                            type: banner_images
                        banner_web_image:
                          data:
                            id: 4
                            type: banner_web_images    
                  included:
                    - attributes:
                        created_at: "2022-12-09T09:10:41.000000Z"
                        updated_at: "2022-12-09T09:10:41.000000Z"
                        url: "http://localhost:9000/bakkal-local-app-images/banner-images/4Eh7FtX2ryUXb4BfR1fqAHXSGSPbeQ0JCuDjL0X0.jpg"
                      id: 1
                      relationships:
                        banner:
                          data:
                            id: 1
                      type: banner_images
                    - attributes:
                        created_at: "2022-12-09T09:10:41.000000Z"
                        updated_at: "2022-12-09T09:10:41.000000Z"
                        url: "http://localhost:9000/bakkal-local-app-images/banner-images/4Eh7FtX2ryUXb4BfR1fqAHXSGSPbeQ0JCuDjL0X0.jpg"
                      id: 3
                      relationships:
                        banner:
                          data:
                            id: 2
                      type: banner_images
                    - attributes:
                        created_at: "2022-12-09T09:10:41.000000Z"
                        updated_at: "2022-12-09T09:10:41.000000Z"
                        url: "http://localhost:9000/bakkal-local-app-images/banner-web-images/4Eh7FtX2ryUXb4BfR1fqAHXSGSPbeQ0JCuDjL0X0.jpg"
                      id: 3
                      relationships:
                        banner:
                          data:
                            id: 2
                      type: banner_web_images  
                    - attributes:
                        created_at: "2022-12-09T09:10:41.000000Z"
                        updated_at: "2022-12-09T09:10:41.000000Z"
                        url: "http://localhost:9000/bakkal-local-app-images/banner-web-images/4Eh7FtX2ryUXb4BfR1fqAHXSGSPbeQ0JCuDjL0X0.jpg"
                      id: 4
                      relationships:
                        banner:
                          data:
                            id: 2
                      type: banner_web_images  
                  links:
                    first: http://0.0.0.0/banners?page=1
                    last: http://0.0.0.0/banners?page=1
                    next: null
                    prev: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      - active: false
                        label: << Previous
                        url: null
                      - active: true
                        label: "1"
                        url: http://0.0.0.0/banners?page=1
                      - active: false
                        label: Next >>
                        url: null
                    path: http://0.0.0.0/banners
                    per_page: 10
                    to: 5
                    total: 5
                items:
                  properties:
                    data:
                      properties:
                        attributes:
                          properties:
                            image:
                              type: string
                            title:
                              type: string
                            status:
                              type: string
                            display_order:
                              type: integer
                          type: object
                        id:
                          type: integer
                        type:
                          type: string
                      type: array
                type: object
          description: List of Banners
    post:
      description: Create new banner
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: banners
                attributes:
                  title: "Title"
                  status: "Active"
                  display_order: 2
                  route: "/products/5"
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: object
                      properties:
                        title:
                          type: string
                        status:
                          type: string
                        display_order:
                          type: integer
      responses:
        "200":
          $ref: "./responses.yml#/bannerResource"
  /banners/{id}:
    patch:
      description: Update banner
      parameters:
        - description: Id of a banner
          example: 3
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: banners
                attributes:
                  title: "Title"
                  status: "Active"
                  display_order: 2
                  route: "/products/5"
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: object
                      properties:
                        title:
                          type: string
                        status:
                          type: string
                        display_order:
                          type: integer
      responses:
        "200":
          $ref: "./responses.yml#/bannerResource"
    get:
      description: Get banner
      parameters:
        - description: Id of a banner
          example: 3
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeBanner"
      responses:
        "200":
          $ref: "./responses.yml#/bannerResource"
  /banners/{id}/banner-images:
    post:
      description: Create banner image
      parameters:
        - description: Id of a banner
          example: 3
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          $ref: "./responses.yml#/bannerImageResource"
  /banner-images/{id}:
    post:
      description: Update banner image
      parameters:
        - description: Id of a banner image
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: ""
          example: PATCH
          in: query
          name: _method
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          $ref: "./responses.yml#/bannerImageResource"
  /banners/{id}/banner-web-images:
    post:
      description: Create banner web image
      parameters:
        - description: Id of a banner
          example: 3
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          $ref: "./responses.yml#/bannerWebImageResource"
  /banner-web-images/{id}:
    post:
      description: Update banner web image
      parameters:
        - description: Id of a banner web image
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: ""
          example: PATCH
          in: query
          name: _method
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          $ref: "./responses.yml#/bannerWebImageResource"              
  /brands:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/sortBrand"
        - $ref: "./parameters.yml#/filterByIsDeleted"
        - description: customize which related resources should be returned (comma-delimited list)
          example: product_subcategory,store_products,dietary_preferences
          in: query
          name: include
          required: false
          schema:
            enum:
              - product_subcategory
              - store_products
              - dietary_preferences
            type: string
      description: Get the list of all brands
      responses:
        "200":
          $ref: "./responses.yml#/brandResources"
    post:
      security:
        - bearerAuth: []
      description: Add the brand entity
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            example:
              data:
                type: brands
                attributes:
                  title: LADA
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attribuites:
                      properties:
                        title:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/brandResource"
  /brands:search:
    get:
      description: Search brands by title
      parameters:
        - description: Search query
          example: 123
          in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/brandResources"
  /brands/{id}:
    get:
      description: Get the brand resource
      security:
        - bearerAuth: []
      parameters:
        - description: brand id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/brandResource"
    patch:
      description: Update the brand resource
      security:
        - bearerAuth: []
      parameters:
        - description: brand id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            example:
              data:
                type: brands
                attributes:
                  title: LADA
                  deleted_at: null
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attribuites:
                      properties:
                        title:
                          type: string
                        deleted_at:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/brandResource"
    delete:
      description: Mark the brand resource as deleted
      security:
        - bearerAuth: []
      parameters:
        - description: brand id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/brandResource"
  /brands/{id}/products:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/includeProductSubcategory"
        - $ref: "./parameters.yml#/filterByProductSubcategoryProductCategory"
        - $ref: "./parameters.yml#/filterByCheapestStoreProductDiscount"
      responses:
        "200":
          $ref: "./responses.yml#/productResources"
  /unfulfilled-service-requests:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
      description: Get the list of all unfulfilled-service-requests
      responses:
        "200":
          $ref: "./responses.yml#/UnfulfilledServiceRequestResources"
  /unfulfilled-service-requests/{id}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - description: unfulfilled-service-request id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      description: Get the unfulfilled-service-request resource
      responses:
        "200":
          $ref: "./responses.yml#/UnfulfilledServiceRequestResource"      
  /cancel-reasons:
    get:
      description: Get cancel reasons
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/filterByUserType"
        - $ref: "./parameters.yml#/filterByIsActive"
      responses:
        "200":
          $ref: "./responses.yml#/cancelReasonResources"
    post:
      description: "Create Order Cancellation Reason"
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "cancel_reasons"
                attributes:
                  title: "title"
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/cancelReasonResource"
  /cancel-reasons/{id}:
    get:
      description: Get cancel reason
      parameters:
        - description: Id of a cancel reason
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/cancelReasonResource"
    patch:
      description: Get cancel reason
      parameters:
        - description: Id of a cancel reason
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "cancel_reasons"
                attributes:
                  title: "title"
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/cancelReasonResource"
    delete:
      description: Delete cancel reason
      parameters:
        - description: Id of a cancel reason
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /canceled-orders:
    post:
      description: Cancel order by admin
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 1
                type: orders
                relationships:
                  cancel_reason:
                    data:
                      id: 1
                      type: cancel_reasons
            schema:
              properties:
                data:
                  properties:
                    id:
                      type: integer
                    type:
                      type: string
                    relationships:
                      properties:
                        cancel_reason:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
  /cart-items/{id}:
    $ref: "./paths/cart.yml#/cart-items~1{id}"
  /carts:
    $ref: "./paths/cart.yml#/carts"
  /carts/{id}:
    $ref: "./paths/cart.yml#/carts~1{id}"
  /carts/{id}/cart-items:
    $ref: "./paths/cart.yml#/carts~1{id}~1cart-items"
  /abandoned-carts:
    $ref: "./paths/cart.yml#/abandoned-carts"
  /chats:
    get:
      description: List chats
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/sortChat"
        - $ref: "./parameters.yml#/filterByIsActive"
      responses:
        "200":
          $ref: "./responses.yml#/chatResources"
  /chats/{id}:
    patch:
      description: Update Chat
      parameters:
        - description: Id of a chat
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: chats
                attributes:
                  is_active: false
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attribuites:
                      properties:
                        is_active:
                          type: boolean
                      type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/chatResource"
  /chats/{id}/chat-messages:
    get:
      description: List chat messages
      parameters:
        - description: Id of a chat
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
      responses:
        "200":
          $ref: "./responses.yml#/chatMessageResources"
    post:
      description: Post chat message
      parameters:
        - description: Id of a chat
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: chat_messages
                attributes:
                  text: msg_text
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attribuites:
                      properties:
                        text:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/chatMessageResource"
  /consumer-courier-chats:
    get:
      description: List consumer courier chats
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/sortConsumerCourierChat"
        - $ref: "./parameters.yml#/filterByUser"
        - $ref: "./parameters.yml#/filterByIsActive"
      responses:
        "200":
          $ref: "./responses.yml#/consumerCourierChatResources"
    post:
      description: Create consumer courier chat
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: consumer_courier_chats
                relationships:
                  data:
                    consumer:
                      data:
                        id: 1
                        type: consumers
                    courier:
                      data:
                        id: 1
                        type: couriers
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    relationships:
                      properties:
                        consumer:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        courier:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/consumerCourierChatResource"
  /consumer-courier-chats/{id}:
    get:
      description: Get consumer courier chat
      parameters:
        - description: Id of a consumer courier chat
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/consumerCourierChatResource"
  /consumer-requests/{id}:
    patch:
      description: Update consumer request state
      parameters:
        - description: Id of the consumer request
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  receiving_state: Received
                type: consumer_requests
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        receiving_state:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/consumerRequestResource"
  /consumer-database-notifications:
    post:
      description: Send database notifications to all consumers
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: Title
                  body: Body
                relationships:
                  area:
                    data:
                      id: 1
                      type: areas
                  areas:
                    data:
                      - id: 1
                        type: areas
                      - id: 2
                        type: areas
                type: consumer_database_notifications
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        title:
                          type: string
                        body:
                          type: string
                      type: object
                    relationships:
                      properties:
                        area:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        areas:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                      type: object
                  type: object
      responses:
        "200":
          description: successful request
          content:
            application/vnd.api+json:
              example:
                data:
                  type: consumer_database_notifications
                  attributes:
                    status: Database notification sent
              schema:
                properties:
                  data:
                    properties:
                      id:
                        type: integer
                      type:
                        type: string
                      attributes:
                        properties:
                          title:
                            type: string
                          body:
                            type: string
                        type: object
                      relationships:
                        properties:
                          area:
                            properties:
                              data:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                type: object
  /consumer-mails:
    post:
      description: Send mail to all consumers
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  subject: Subject
                  body: Body
                type: consumer_mails
                relationships:
                  area:
                    data:
                      id: 1
                      type: areas
                  areas:
                    data:
                      - id: 1
                        type: areas
                      - id: 2
                        type: areas
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        subject:
                          type: string
                        body:
                          type: string
                      type: object
                    type:
                      type: string
                    relationships:
                      properties:
                        area:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        areas:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                  type: object
              type: object
      responses:
        "200":
          description: successful request
          content:
            application/vnd.api+json:
              example:
                data:
                  type: consumer_mails
                  attributes:
                    status: Mail sent
              schema:
                properties:
                  data:
                    properties:
                      type:
                        type: string
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                    type: object
                type: object
  /consumer-notifications:
    post:
      description: Send push notifications to all consumers
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: Title
                  body: Body
                relationships:
                  area:
                    data:
                      id: 1
                      type: areas
                  areas:
                    data:
                      - id: 1
                        type: areas
                      - id: 2
                        type: areas
                type: consumer_notifications
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        body:
                          type: string
                      type: object
                    relationships:
                      properties:
                        area:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        areas:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                  type: object
      responses:
        "200":
          description: successful request
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    status: "Notifications sent"
                  type: consumer_notifications
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
  /consumer-sms-notifications:
    post:
      description: Send sms notifications to all consumers
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  body: Body
                relationships:
                  area:
                    data:
                      id: 1
                      type: areas
                  areas:
                    data:
                      - id: 1
                        type: areas
                      - id: 2
                        type: areas
                type: consumer_sms_notifications
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        body:
                          type: string
                      type: object
                    relationships:
                      properties:
                        area:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        areas:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                  type: object
      responses:
        "200":
          description: successful request
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    status: "Notifications sent"
                  type: consumer_sms_notifications
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
  /consumer-reviews:
    get:
      description: List all consumer reviews
      responses:
        "200":
          $ref: "./responses.yml#/reviewResources"
  /consumers:
    get:
      description: List Consumers
      responses:
        "200":
          $ref: "./responses.yml#/consumerResources"
  /consumers/{consumerId}/canceled-orders:
    post:
      description: Cancel order by consumer
      parameters:
        - description: Id of the consumer
          example: 1
          in: path
          name: consumerId
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 1
                type: "orders"
                relationships:
                  cancel_reason:
                    data:
                      id: 1
                      type: "cancel_reasons"
            schema:
              properties:
                data:
                  properties:
                    id:
                      type: integer
                    type:
                      type: string
                    relationships:
                      properties:
                        cancel_reason:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
  /consumers/{consumerId}/cards/{cardId}:
    delete:
      description: Detach the card from consumer.
      parameters:
        - description: Id of the consumer
          example: 1
          in: path
          name: consumerId
          required: true
          schema:
            type: integer
        - description: Id of the consumer's card
          example: card_1LpSOIF6dwsGqIr5YQyKvlPd
          in: path
          name: cardId
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/deletedCardResource"
        "400":
          $ref: "./responses.yml#/stripeInvalidRequestExceptionResources"
  /consumers/{consumerId}/favorite-products/{productId}:
    delete:
      description: Delete a store from consumer's favorite products list
      parameters:
        - description: Consumer id
          example: 1
          in: path
          name: consumerId
          required: true
          schema:
            type: integer
        - description: Product's id that we are willing to remove
          example: 1
          in: path
          name: productId
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /consumers/{consumerId}/favorite-stores/{storeId}:
    delete:
      description: Delete a store from consumer's favorite stores list
      parameters:
        - description: Consumer id
          example: 1
          in: path
          name: consumerId
          required: true
          schema:
            type: integer
        - description: Store's id that we willing to remove
          example: 1
          in: path
          name: storeId
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
        "404":
          description: "Consumer: {consumerId} does not have a favorite store: {storeId}!"
  /consumers/{id}:
    get:
      description: Get Consumer resource
      parameters:
        - description: id of Consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/consumerResource"
    patch:
      description: >-
        Update Consumer resource. Only attributes to be changed need to present
        in the request. (though it's possible to update phone using this request, you should use /users/{id})
      parameters:
        - description: id of Consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  first_name: Alan
                  is_app_terminated: false
                  is_logged_out: true
                  last_name: Turing
                  latitude: 37.2
                  longitude: -121.6
                  phone_code: 1
                  phone_number: 1212121212
                type: consumers
                relationships:
                  default_address:
                    data:
                      id: 1
                      type: addresses
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        first_name:
                          type: string
                        is_app_terminated:
                          type: boolean
                        is_logged_out:
                          type: boolean
                        last_name:
                          type: string
                        latitude:
                          type: number
                        longitude:
                          type: number
                        phone_code:
                          type: string
                        phone_number:
                          type: string
                      type: object
                    id:
                      type: integer
                    type:
                      type: string
                    relationships:
                      properties:
                        default_address:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/consumerResource"
  /consumers/{id}/addresses:
    get:
      description: Get Consumer's Address objects
      parameters:
        - description: id of a customer for whom the address objects will be listed
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/store"
        - $ref: "./parameters.yml#/sortAddress"
      responses:
        "200":
          $ref: "./responses.yml#/addressResources"
    post:
      description: Create address for a given consumer
      parameters:
        - description: >-
            Id of a consumer for whom the address object will be created.
            `building_number` and `nickname` are optonal, no need to send them,
            if they are empty
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  address: Naboo
                  building_number: "314"
                  landmark: Palace
                  latitude: "37.67590458235008"
                  longitude: "-121.8782637694642"
                  nickname: Office
                type: addresses
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        address:
                          type: string
                        building_number:
                          type: string
                        landmark:
                          type: string
                        latitude:
                          type: string
                        longitude:
                          type: string
                        nickname:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "201":
          $ref: "./responses.yml#/addressResource"
  /consumers/{id}/addresses/last:
    get:
      description: Get an address of the last created order
      parameters:
        - description: Id of the consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/addressResource"
  /consumers/{id}/cards:
    get:
      description: >-
        List of all cards of the consumer. The first element of list is ALWAYS
        the default card.
      parameters:
        - description: Id of the consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/cardResources"
    post:
      description: >-
        Add a card to the consumer. If consumer does not have the corresponding
        Stripe customer, it will be created during the addition of card.
      parameters:
        - description: Id of the consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              example:
                data:
                  attributes:
                    source_token: tok_us
                  type: cards
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        source_token:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/cardResource"
        "400":
          $ref: "./responses.yml#/stripeInvalidRequestExceptionResources"
        "402":
          $ref: "./responses.yml#/stripeCardExceptionResources"
  /consumers/{id}/carts:
    $ref: "./paths/cart.yml#/consumers~1{id}~1carts"
  /consumers/{id}/default-cards:
    post:
      description: Set the default card of the consumer.
      parameters:
        - description: Id of the consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              example:
                data:
                  id: card_1LpSOIF6dwsGqIr5YQyKvlPd
                  type: cards
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/cardResource"
        "400":
          $ref: "./responses.yml#/stripeInvalidRequestExceptionResources"
  /consumers/{id}/favorite-products:
    get:
      description: Get favorite products of the consumer
      parameters:
        - description: Consumer id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
      responses:
        "200":
          $ref: "./responses.yml#/productResources"
    post:
      description: Set a product as favorite for the consumer
      parameters:
        - description: Consumer id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 1
                type: products
            schema:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/productResource"
  /consumers/{id}/favorite-stores:
    get:
      description: Get favorite stores of the consumer
      parameters:
        - description: Consumer id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
      responses:
        "200":
          $ref: "./responses.yml#/orderResources"
    post:
      description: Set a store as favorite the consumer
      parameters:
        - description: Consumer id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 1
                type: stores
            schema:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
  /consumers/{id}/favorites:
    get:
      description: Get Consumer's favorite stores object
      parameters:
        - description: Id of a consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeFavorites"
      responses:
        "200":
          $ref: "./responses.yml#/favoriteResources"
    post:
      description: Mark the store as favorite for a given consumer
      parameters:
        - description: Id of a consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              example:
                data:
                  relationships:
                    store:
                      data:
                        id: 53
                        type: stores
                  type: favorites
              properties:
                data:
                  properties:
                    relationships:
                      properties:
                        store:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "201":
          $ref: "./responses.yml#/favoriteResource"
  /consumers/{id}/ordered-store-products:
    get:
      description: >-
        Get consumer's already bought unique store products. Ordered by recency by
        default. Possible to restrict the list for particular store, using the
        `filter[store]` query parameter.
      parameters:
        - description: id of a customer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/orderFilterOrderType"
        - $ref: "./parameters.yml#/filterByStore"
        - $ref: "./parameters.yml#/filterByConsumer"
        - $ref: "./parameters.yml#/filterByCourier"
        - $ref: "./parameters.yml#/includeStoreProduct"
      responses:
        "200":
          $ref: "./responses.yml#/storeProductResources"
  /consumers/{id}/orders:
    get:
      description: List of all orders made by consumer
      parameters:
        - description: Id of the consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/sortOrder"
        - $ref: "./parameters.yml#/filterByStore"
        - $ref: "./parameters.yml#/filterByConsumer"
        - $ref: "./parameters.yml#/filterByCourier"
        - $ref: "./parameters.yml#/filterByPromoCode"
        - $ref: "./parameters.yml#/filterByOrderState"
        - $ref: "./parameters.yml#/includeOrderCollection"
      responses:
        "200":
          $ref: "./responses.yml#/orderResources"
    post:
      description: >-
        Create a new order for the consumer. Check the schema description for
        complete attribute requirement information.
      parameters:
        - description: Id of the consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            examples:
              allAttributesStoreProductsNaming:
                summary: Request with all optional attributes. Using "store-products" naming convention.
                value:
                  data:
                    attributes:
                      cart:
                        - store_product_id: "1"
                          quantity: "1"
                      instructions: Please call me
                      is_gift: true
                      recipient_name: John Doe
                      recipient_phone_number: 1234567890
                      tip:
                        type: percent
                        value: 10
                    relationships:
                      address:
                        data:
                          id: 1
                          type: addresses
                      promo_code:
                        data:
                          id: 24
                          type: promo_codes
                      preferences:
                        data:
                          - id: 1
                            type: preferences
                      store:
                        data:
                          id: 1
                          type: stores
                      cart:
                        data:
                          id: 1
                          type: carts
                      delivery_instruction:
                        data:
                          lid: 1
                          type: delivery_instructions
                          attributes:
                            instruction: lean on
                            is_reusable: true
                          relationships:
                            delivery_instruction_options:
                              data:
                                - id: 1
                                  type: delivery_instruction_options
                                - id: 2
                                  type: delivery_instruction_options
                    type: orders
              allAttributesPercent:
                summary: Request with all optional attributes. Tip by percent.
                value:
                  data:
                    attributes:
                      cart:
                        - product_id: "1"
                          quantity: "1"
                      instructions: Please call me
                      tip:
                        type: percent
                        value: 10
                    relationships:
                      address:
                        data:
                          id: 1
                          type: addresses
                      promo_code:
                        data:
                          id: 24
                          type: promo_codes
                      preferences:
                        data:
                          - id: 1
                            type: preferences
                      store:
                        data:
                          id: 1
                          type: stores
                    type: orders
              allAttributesValue:
                summary: Request with all optional attributes. Tip set as value.
                value:
                  data:
                    attributes:
                      cart:
                        - product_id: "1"
                          quantity: "1"
                      instructions: Please call me
                      tip:
                        type: flat
                        value: 5
                    relationships:
                      address:
                        data:
                          id: 1
                          type: addresses
                      promo_code:
                        data:
                          id: 24
                          type: promo_codes
                      preferences:
                        data:
                          - id: 1
                            type: preferences
                      store:
                        data:
                          id: 1
                          type: stores
                    type: orders
              onlyRequired:
                summary: Request with only required attributes
                value:
                  data:
                    attributes:
                      cart:
                        - product_id: "1"
                          quantity: "1"
                    relationships:
                      address:
                        data:
                          id: 1
                          type: addresses
                      store:
                        data:
                          id: 1
                          type: stores
                    type: orders
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        cart:
                          items:
                            properties:
                              product_id:
                                type: integer
                              quantity:
                                type: number
                            required:
                              - quantity
                              - product_id
                            type: object
                          type: array
                        instructions:
                          type: string
                        tip:
                          properties:
                            type:
                              enum:
                                - percent
                                - flat
                              type: string
                            value:
                              type: number
                          type: object
                      required:
                        - cart
                      type: object
                    relationships:
                      properties:
                        address:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        preferences:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                        store:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        cart:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      required:
                        - store
                        - address
                      type: object
                    type:
                      type: string
                  required:
                    - type
                    - attributes
                    - relationships
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
        "422":
          $ref: "./responses.yml#/lowOrderTotalExceptionResources"
      security:
        - bearerAuth: []
  /consumers/{id}/orders/estimation:
    post:
      description: >-
        Get an estimation of the new order for the consumer. Check the schema
        description for complete attribute requirement information. The aim is
        to have exactly the same requests, but estimation results with no
        inserts to DB, when other request will create the order. Address is
        optional.
      parameters:
        - description: Id of the consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            examples:
              allAttributesPercent:
                summary: Request with all optional attributes. Tip by percent.
                value:
                  data:
                    attributes:
                      cart:
                        - product_id: "1"
                          quantity: "1"
                      instructions: Please call me
                      tip:
                        type: percent
                        value: 10
                    relationships:
                      address:
                        data:
                          id: 1
                          type: addresses
                      preferences:
                        data:
                          - id: 1
                            type: preferences
                      store:
                        data:
                          id: 1
                          type: stores
                    type: orders
              allAttributesValue:
                summary: Request with all optional attributes. Tip set as value.
                value:
                  data:
                    attributes:
                      cart:
                        - product_id: "1"
                          quantity: "1"
                      instructions: Please call me
                      tip:
                        type: flat
                        value: 5
                    relationships:
                      address:
                        data:
                          id: 1
                          type: addresses
                      preferences:
                        data:
                          - id: 1
                            type: preferences
                      store:
                        data:
                          id: 1
                          type: stores
                      delivery_instruction:
                        data:
                          lid: 1
                          type: delivery_instructions
                          attributes:
                            instruction: lean on
                            is_reusable: true
                          relationships:
                            delivery_instruction_options:
                              data:
                                - id: 1
                                  type: delivery_instruction_options
                                - id: 2
                                  type: delivery_instruction_options
                    type: orders
              onlyRequired:
                summary: Request with only required attributes
                value:
                  data:
                    attributes:
                      cart:
                        - product_id: "1"
                          quantity: "1"
                    relationships:
                      store:
                        data:
                          id: 1
                          type: stores
                    type: orders
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        cart:
                          items:
                            properties:
                              product_id:
                                type: integer
                              quantity:
                                type: number
                            required:
                              - quantity
                              - product_id
                            type: object
                          type: array
                        tip:
                          properties:
                            type:
                              enum:
                                - percent
                                - flat
                              type: string
                            value:
                              type: number
                          type: object
                      required:
                        - cart
                      type: object
                    relationships:
                      properties:
                        address:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        preferences:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                        store:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      required:
                        - store
                      type: object
                    type:
                      type: string
                  required:
                    - type
                    - attributes
                    - relationships
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
        "422":
          $ref: "./responses.yml#/lowOrderTotalExceptionResources"
      security:
        - bearerAuth: []
  /consumers/{id}/passwords:
    patch:
      description: Update consumer's password
      parameters:
        - description: Id of the consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  new_password: HueHue
                  old_password: "123456"
                type: passwords
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        new_password:
                          type: string
                        old_password:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/passwordResource"
  /consumers/{id}/payment-intents:
    post:
      description: Create the payment intent for order
      parameters:
        - description: Id of a consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              example:
                data:
                  relationships:
                    order:
                      data:
                        id: 104
                        type: orders
                  type: payment_intents
              properties:
                data:
                  properties:
                    relationships:
                      properties:
                        order:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "201":
          $ref: "./responses.yml#/paymentIntentResource"
        "400":
          $ref: "./responses.yml#/stripeInvalidRequestExceptionResources"
        "402":
          $ref: "./responses.yml#/stripeCardExceptionResources"
  /consumers/{id}/payment-methods:
    get:
      description: List of all card payment methods of the consumer
      parameters:
        - description: id of the consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/customerPaymentMethodResources"
  /consumers/{id}/payment-methods/last:
    get:
      description: Get a payment method of the last paid order
      parameters:
        - description: Id of the consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/cardResource"
  /consumers/{id}/payments:
    post:
      description: Pay for the order with default card
      parameters:
        - description: Id of a consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              example:
                data:
                  relationships:
                    order:
                      data:
                        id: 104
                        type: orders
                  type: payments
              properties:
                data:
                  properties:
                    relationships:
                      properties:
                        order:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "201":
          $ref: "./responses.yml#/paymentResource"
        "400":
          $ref: "./responses.yml#/stripeInvalidRequestExceptionResources"
        "402":
          $ref: "./responses.yml#/stripeCardExceptionResources"
  /consumers/{id}/recent-stores:
    get:
      description: >-
        Get the paginated list of stores, in which consumer has already bought
        something. Ordered by recency.
      parameters:
        - description: id of a consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/latitudeOptional"
        - $ref: "./parameters.yml#/longitudeOptional"
        - $ref: "./parameters.yml#/distance"
      responses:
        "200":
          $ref: "./responses.yml#/storeResources"
  /consumers/{id}/referral-codes:
    post:
      description: Create a referral code for a consumer
      parameters:
        - description: id of a consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "referral_codes"
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/referralCodeResource"
  /consumers/{id}/reviews:
    get:
      description: List consumer reviews
      parameters:
        - description: consumer id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
      responses:
        "200":
          $ref: "./responses.yml#/reviewResources"
    post:
      description: Create review to store and courier
      parameters:
        - description: Consumer id
          example: 153
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  courier_message: lorem ipsum dor amen
                  courier_rating: 3
                  store_message: My mama bakes better cookies!
                  store_rating: 1
                relationships:
                  order:
                    data:
                      id: 89
                      type: orders
                  store_review_options:
                    data:
                      - id: 1
                        type: review_options
                      - id: 3
                        type: review_options
                  courier_review_options:
                    data:
                      - id: 2
                        type: review_options
                      - id: 4
                        type: review_options
                type: reviews
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        courier_message:
                          type: string
                        courier_rating:
                          enum:
                            - 1
                            - 2
                            - 3
                            - 4
                            - 5
                          type: integer
                        store_message:
                          type: string
                        store_rating:
                          enum:
                            - 1
                            - 2
                            - 3
                            - 4
                            - 5
                          type: integer
                      type: object
                    relationships:
                      properties:
                        order:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        store_review_options:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                        courier_review_options:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/reviewResource"
  /consumers/{id}/scheduled-orders:
    post:
      description: Create and schdule an order
      requestBody:
        content:
          application/vnd.api+json:
            example:
              allAttributesPercent:
                summary: Request with all optional attributes. Tip by percent.
                value:
                  data:
                    attributes:
                      cart:
                        - store_product_id: "1"
                          quantity: "1"
                      instructions: Please call me
                      is_gift: true
                      recipient_name: John Doe
                      recipient_phone_number: 1234567890
                      tip:
                        type: percent
                        value: 10
                      placed_at: "2023-04-12 14:53:23"
                    relationships:
                      address:
                        data:
                          id: 1
                          type: addresses
                      promo_code:
                        data:
                          id: 24
                          type: promo_codes
                      preferences:
                        data:
                          - id: 1
                            type: preferences
                      store:
                        data:
                          id: 1
                          type: stores
                    type: orders
              allAttributesValue:
                summary: Request with all optional attributes. Tip set as value.
                value:
                  data:
                    attributes:
                      cart:
                        - store_product_id: "1"
                          quantity: "1"
                      instructions: Please call me
                      tip:
                        type: flat
                        value: 5
                      placed_at: "2023-04-12 14:53:23"
                    relationships:
                      address:
                        data:
                          id: 1
                          type: addresses
                      promo_code:
                        data:
                          id: 24
                          type: promo_codes
                      preferences:
                        data:
                          - id: 1
                            type: preferences
                      store:
                        data:
                          id: 1
                          type: stores
                    type: orders
              onlyRequired:
                summary: Request with only required attributes
                value:
                  data:
                    attributes:
                      cart:
                        - store_product_id: "1"
                          quantity: "1"
                      placed_at: "2023-04-12 14:53:23"
                    relationships:
                      address:
                        data:
                          id: 1
                          type: addresses
                      store:
                        data:
                          id: 1
                          type: stores
                    type: orders
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        cart:
                          items:
                            properties:
                              store_product_id:
                                type: integer
                              quantity:
                                type: number
                            required:
                              - quantity
                              - product_id
                            type: object
                          type: array
                        instructions:
                          type: string
                        tip:
                          properties:
                            type:
                              enum:
                                - percent
                                - flat
                              type: string
                            value:
                              type: number
                          type: object
                        placed_at:
                          format: date-time
                          type: string
                      required:
                        - cart
                        - placed_at
                      type: object
                    relationships:
                      properties:
                        address:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        preferences:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                        store:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      required:
                        - store
                        - address
                      type: object
                    type:
                      type: string
                  required:
                    - type
                    - attributes
                    - relationships
                  type: object
              type: object
        required: true
      responses:
        "201":
          $ref: "./responses.yml#/orderResource"

  /consumers/{id}/trip-state-messages/latest:
    get:
      description: Get a single trip state messages resource, which is latest
      parameters:
        - description: id of consumer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/tripStateMessageResource"
        "404":
          $ref: "./responses.yml#/tripStateMEssageErrorResources"
  /consumers/{id}/trips:
    get:
      description: Get trips of the consumer
      parameters:
        - description: Consumer id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeTrip"
      responses:
        "200":
          $ref: "./responses.yml#/tripResources"
  /consumers/{id}/wallet-transactions:
    get:
      description: Get list of consumer wallet transactions. By default ordered by recency.
      parameters:
        - description: id of a customer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
      responses:
        "200":
          $ref: "./responses.yml#/walletTransactionResources"
    post:
      description: Add money to wallet using default card
      parameters:
        - description: id of a customer
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              example:
                data:
                  attributes:
                    amount: 30
                  type: wallet_transactions
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        amount:
                          type: number
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "201":
          $ref: "./responses.yml#/walletTransactionResource"
        "400":
          $ref: "./responses.yml#/stripeInvalidRequestExceptionResources"
        "402":
          $ref: "./responses.yml#/stripeCardExceptionResources"
  /countries:
    get:
      description: List countries.
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/filterByIsActive"
      responses:
        "200":
          $ref: "./responses.yml#/countryResources"
  /countries:search:
    get:
      description: Search countries by name.
      parameters:
        - description: Search query
          example: "United States"
          in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/countryResources"
  /countries/{id}:
    get:
      description: Get Country resource
      parameters:
        - description: id of country
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/countryResource"
    patch:
      description: >-
        Update Country resource. Only attributes to be changed need to present
        in request.
      parameters:
        - description: id of country
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  is_active: true
                  start_time: "10:00"
                  end_time: "20:00"
                type: countries
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        is_active:
                          type: boolean
                      type: object
                    id:
                      type: integer
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/countryResource"
  /courier-reviews:
    get:
      description: List all courier reviews
      responses:
        "200":
          $ref: "./responses.yml#/reviewResources"
  /couriers:
    get:
      description: List Couriers
      parameters:
        - description: Starting date of an order filtering interval (in UTC+0)
          example: "2020-01-01"
          in: query
          name: last_online_from
          required: false
          schema:
            type: string
        - description: Finishing date of an order filtering interval (in UTC+0)
          example: "2020-01-02"
          in: query
          name: last_online_to
          required: false
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/courierResources"
  /couriers/{courier}/orders:
    get:
      description: Get list of courier orders
      parameters:
        - description: Courier id
          example: 1
          in: path
          name: courier
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/orderSort"
        - $ref: "./parameters.yml#/orderFilterOrderType"
        - $ref: "./parameters.yml#/filterByStore"
        - $ref: "./parameters.yml#/filterByConsumer"
        - $ref: "./parameters.yml#/filterByCourier"
        - $ref: "./parameters.yml#/filterByPromoCode"
        - $ref: "./parameters.yml#/filterByOrderState"
        - $ref: "./parameters.yml#/includeOrderCollection"
        - description: Starting date of an order filtering interval (in UTC+0)
          example: "2020-01-01"
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Finishing date of an order filtering interval (in UTC+0)
          example: "2020-01-02"
          in: query
          name: created_to
          required: false
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/orderResources"
  /couriers/{courier}/delivered-orders:
    post:
      description: Endpoint to confirm order was delivered
      parameters:
        - description: id of a courier
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 1
                type: orders
            schema:
              properties:
                data:
                  properties:
                    id:
                      type: integer
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
  /couriers/{courier}/picked-up-orders:
    post:
      description: Endpoint to confirm order was picked up
      parameters:
        - description: id of a courier
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 1
                type: orders
            schema:
              properties:
                data:
                  properties:
                    id:
                      type: integer
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
  /couriers/{id}:
    get:
      description: Get Courier resource
      parameters:
        - description: id of courier will be created
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/courierResource"
    patch:
      description: >-
        Update Courier resource. Only attributes to be changed need to present
        in request.
      parameters:
        - description: id of Courier
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  account_number: "140"
                  bank_account_holder_name: Dr. Craig DuBuque DVM
                  bank_location: |-
                    451 Kiel Plain Apt. 682
                    Oliverland, WY 25093
                  bank_name: Merle Shanahan
                  first_name: Alan
                  is_active: true
                  is_app_terminated: false
                  is_available: true
                  is_logged_out: false
                  last_name: Turing
                  last_online_date: "2022-09-29 13:01:02"
                  latitude: "44"
                  longitude: "55"
                  online_date: "2022-09-29 13:01:02"
                  payment_email: gerhold.matilde@schmitt.com
                  phone_code: "1"
                  phone_number: "1212121212"
                  swift_code: "261"
                type: couriers
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        account_number:
                          type: string
                        bank_account_holder_name:
                          type: string
                        bank_location:
                          type: string
                        bank_name:
                          type: string
                        first_name:
                          type: string
                        is_active:
                          type: boolean
                        is_app_terminated:
                          type: boolean
                        is_available:
                          type: boolean
                        is_logged_out:
                          type: boolean
                        last_name:
                          type: string
                        last_online_date:
                          type: string
                        latitude:
                          type: number
                        longitude:
                          type: number
                        online_date:
                          type: string
                        payment_email:
                          type: string
                        phone_code:
                          type: string
                        phone_number:
                          type: string
                        swift_code:
                          type: string
                      type: object
                    id:
                      type: integer
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/courierResource"
  /couriers/{id}/canceled-orders:
    post:
      description: Can an Order by Courier
      parameters:
        - description: id of Courier
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  cancel_reason: Too far to go!
                id: 1
                type: orders
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        cancel_reason:
                          type: string
                      type: object
                    id:
                      type: integer
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
  /couriers/{id}/consumer-requests/latest:
    get:
      description: Get a single consumer request resource, which is latest
      parameters:
        - description: id of courier
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/consumerRequestResource"
  /couriers/{id}/current-vehicles:
    post:
      description: Update courier's current vehicle
      parameters:
        - description: Courier id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 1
                type: vehicles
            schema:
              properties:
                data:
                  properties:
                    id:
                      type: integer
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/vehicleResource"
  /couriers/{id}/declined-courier-requests:
    post:
      description: Decline courier's trip request
      parameters:
        - description: Courier id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 1
                type: courier_requests
            schema:
              properties:
                data:
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/courierRequestResource"
  /couriers/{id}/courier-profile-images:
    post:
      description: Store courier's profile image
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
          description: Id of a courier
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "201":
          $ref: "./responses.yml#/courierProfileImageResource"
  /couriers/{id}/driver-license-images:
    post:
      description: Store courier's driver license image
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
          description: Id of a courier
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "201":
          $ref: "./responses.yml#/driverLicenseImageResource"
  /couriers/{id}/passwords:
    patch:
      description: Update courier's password
      parameters:
        - description: Id of the courier
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  new_password: HueHue
                  old_password: "123456"
                type: passwords
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        new_password:
                          type: string
                        old_password:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/passwordResource"
  /couriers/{id}/reviews:
    get:
      description: List courier reviews
      parameters:
        - description: courier id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
      responses:
        "200":
          $ref: "./responses.yml#/reviewResources"
    post:
      description: Create review to consumer
      parameters:
        - description: Courier id
          example: 153
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: reviews
                attributes:
                  rating: 5
                  message: ololo
                relationships:
                  order:
                    data:
                      type: orders
                      id: 7
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        message:
                          type: string
                        rating:
                          type: integer
                      type: object
                    relationships:
                      properties:
                        order:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/reviewResource"
  /couriers/{id}/trip-state-messages/latest:
    get:
      description: Get a single trip state messages resource, which is latest
      parameters:
        - description: id of courier
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/tripStateMessageResource"
        "404":
          $ref: "./responses.yml#/tripStateMEssageErrorResources"
  /couriers/{id}/trips:
    get:
      description: Get trips of the courier
      parameters:
        - description: Courier id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeTrip"
      responses:
        "200":
          $ref: "./responses.yml#/tripResources"
    post:
      description: Accept order and create trip
      parameters:
        - description: Courier id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: trips
                attributes:
                  start_latitude: 37.317361757727505
                  start_longitude: -122.04618360366
                  end_latitude: 37.317341757727505
                  end_longitude: -122.04616360366
                  start_address: "start address"
                  destination_address: "destination address"
                  msg_code: 1234712359761234
                relationships:
                  order:
                    data:
                      id: 1
                      type: orders
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        start_latitude:
                          type: number
                        start_longitude:
                          type: number
                        end_latitude:
                          type: number
                        end_longitude:
                          type: number
                        start_address:
                          type: string
                        destination_address:
                          type: string
                        msg_code:
                          type: integer
                      type: object
                    relationships:
                      properties:
                        order:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/tripResource"
  /couriers/{id}/vehicles:
    get:
      description: List Courier's vehicles
      parameters:
        - description: id of Courier
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/vehicleResources"
    post:
      security:
        - bearerAuth: []
      description: Create a Vehicle for Courier
      parameters:
        - description: Id of the courier
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: vehicles
                attributes:
                  year: 1995
                  license_plate: A45VF
                  color: blue
                relationships:
                  vehicle_make:
                    data:
                      id: 5
                      type: makes
                  vehicle_model:
                    data:
                      id: 3
                      type: models
                  vehicle_type:
                    data:
                      id: 3
                      type: types
                  store:
                    data:
                      id: 3
                      type: types
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        color:
                          type: string
                        licenSe_plate:
                          type: string
                        year:
                          type: integer
                      type: object
                    id:
                      type: integer
                    relationships:
                      properties:
                        vehicle_make:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        vehicle_model:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        vehicle_type:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        store:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/vehicleResource"
  /courier-database-notifications:
    post:
      description: Send database notifications to all couriers (if area is provided then to all couriers within area)
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: Title
                  body: Body
                type: courier_database_notifications
                relationships:
                  area:
                    data:
                      id: 1
                      type: areas
                  areas:
                    data:
                      - id: 1
                        type: areas
                      - id: 2
                        type: areas
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        title:
                          type: string
                        body:
                          type: string
                      type: object
                    relationships:
                      properties:
                        area:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        areas:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                  type: object
      responses:
        "200":
          description: successful request
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    status: Database notification sent
                  type: courier_database_notifications
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
  /courier-mails:
    post:
      description: Send mail to all couriers (if area is provided then to all couriers within area)
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  subject: Subject
                  body: Body
                type: courier_mails
                relationships:
                  area:
                    data:
                      id: 1
                      type: areas
                  areas:
                    data:
                      - id: 1
                        type: areas
                      - id: 2
                        type: areas
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        subject:
                          type: string
                        body:
                          type: string
                      type: object
                    relationships:
                      properties:
                        area:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        areas:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                  type: object
      responses:
        "200":
          description: successful request
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    status: Mail sent
                  type: courier_mails
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
  /courier-notifications:
    post:
      description: Send push notifications to all couriers (if area is provided then to all couriers within area)
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: Title
                  body: Body
                type: courier_notifications
                relationships:
                  area:
                    data:
                      id: 1
                      type: areas
                  areas:
                    data:
                      - id: 1
                        type: areas
                      - id: 2
                        type: areas
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        title:
                          type: string
                        body:
                          type: string
                      type: object
                    relationships:
                      properties:
                        area:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        areas:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                  type: object
      responses:
        "200":
          description: successful request
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    status: "Notifications sent"
                  type: courier_notifications
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
  /courier-profile-images/{id}:
    get:
      description: Get courier's profile image
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
          description: Id of a courier's profile image
      responses:
        "200":
          content:
            image/*:
              schema:
                type: string
                format: binary
          description: successful
    post:
      description: Update courier profile image
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
          description: Id of a courier's profile image
        - name: _method
          in: query
          required: true
          schema:
            enum:
              - PATCH
            type: string
          example: PATCH
          description: Method
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          $ref: "./responses.yml#/courierProfileImageResource"
    delete:
      description: Delete courier's profile image
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
          description: Id of a courier's profile image
      responses:
        "204":
          description: No content
  /cuisine-images/{id}:
    get:
      description: Get cuisine image
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
          description: Id of a cuisine image
      responses:
        "200":
          $ref: "./responses.yml#/cuisineImageResource"
    post:
      description: Update cuisine image
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
          description: Id of a cuisine image
        - name: _method
          in: query
          required: true
          schema:
            enum:
              - PATCH
            type: string
          example: PATCH
          description: Method
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          $ref: "./responses.yml#/cuisineImageResource"
    delete:
      description: Delete cuisine image
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
          description: Id of a cuisine image
      responses:
        "204":
          description: No content
  /cuisines:
    get:
      description: Get the list of Cuisines
      parameters:
        - $ref: "./parameters.yml#/includeCuisineImage"
      responses:
        "200":
          $ref: "./responses.yml#/cuisineResources"
    post:
      description: Create cuisine object.
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  image: image.png
                  title: Halal
                type: cuisines
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        image:
                          type: string
                        title:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/cuisineResource"
  /cuisines/{cuisineId}/stores/{storeId}:
    delete:
      description: >-
        For particular cuisine and store relationship remove it from a list of
        stores. Other existing relationships would not be affected. If
        non-existing relationship was requested for deletion, nothing would be
        done.
      parameters:
        - description: Id of the cuisine
          example: 1
          in: path
          name: cuisineId
          required: true
          schema:
            type: integer
        - description: Id of the store
          example: 1
          in: path
          name: storeId
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /cuisines/{id}:
    delete:
      description: Delete cuisine by Id. Soft deletion.
      parameters:
        - description: Id of the cuisine
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/cuisineResource"
    get:
      description: Get Cuisine by id
      parameters:
        - description: Id of the cuisine
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeCuisineImage"
      responses:
        "200":
          $ref: "./responses.yml#/cuisineResource"
    patch:
      description: Update cuisine by Id.
      parameters:
        - description: Id of the cuisine
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  image: image.png
                  title: Halal
                  is_active: true
                type: cuisines
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        image:
                          type: string
                        title:
                          type: string
                        is_active:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/cuisineResource"
  /cuisines/{id}/cuisine-images:
    post:
      description: Get cuisine images
      parameters:
        - description: cuisine id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "201":
          $ref: "./responses.yml#/cuisineImageResource"
  /cuisines/{id}/relationships/stores:
    patch:
      description: >-
        For particular cuisine add relationships to a list of stores. Existing
        relationships would be REWRITTEN. If an empty array was sent, all
        relationships of the particular cuisine would be removed.
      parameters:
        - description: Id of the cuisine
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                - id: 155
                  type: stores
                - id: 156
                  type: stores
            schema:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: integer
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "204":
          description: No content
    post:
      description: >-
        For particular cuisine add relationships to a list of stores. Existing
        relationships would not be affected. If there is already a relationship
        between particular store and cuisine, but it was requested again, it
        would not be affected or doubled.
      parameters:
        - description: Id of the cuisine
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                - id: 155
                  type: stores
                - id: 156
                  type: stores
            schema:
              properties:
                data:
                  items:
                    properties:
                      id:
                        type: integer
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "204":
          description: No content
  /cuisines/{id}/stores:
    get:
      description: LIST Stores from Cuisines
      parameters:
        - description: id of the cuisine
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/latitude"
        - $ref: "./parameters.yml#/longitude"
        - $ref: "./parameters.yml#/distance"
        - $ref: "./parameters.yml#/include"
      responses:
        "200":
          $ref: "./responses.yml#/storeResources"

  /data-operators:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/includeDataOperator"
      description: Get the list of all data operators
      responses:
        "200":
          $ref: "./responses.yml#/dataOperatorResources"
    post:
      security:
        - bearerAuth: []
      description: Assign a user to be data operator
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    relationships:
                      type: object
                      properties:
                        user:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                type:
                                  type: string
                                id:
                                  type: number
            example:
              data:
                type: data_operators
                relationships:
                  user:
                    data:
                      id: 6
                      type: users
      responses:
        "201":
          $ref: "./responses.yml#/dataOperatorResource"
  /data-operators/{id}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - description: Data operator id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeDataOperator"
      description: Get the particular data operator resource
      responses:
        "200":
          $ref: "./responses.yml#/dataOperatorResource"
  /delivery-instruction-options:
    get:
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
      responses:
        "200":
          $ref: "./responses.yml#/deliveryInstructionOptionResources"
    post:
      description: Create delivery instruction option
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: "Leave at the door"
                type: delivery_instruction_options
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/deliveryInstructionOptionResource"
  /delivery-instruction-options/{id}:
    get:
      description: Get delivery instruction option
      parameters:
        - description: Delivery instruction option id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/deliveryInstructionOptionResource"
    patch:
      security:
        - bearerAuth: []
      description: Update delivery instruction option. Only attributes to be updated need to present.
      parameters:
        - description: Delivery instruction option id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: delivery_instruction_options
                attributes:
                  title: "Leave at the door"
                  is_active: true
                  display_order: 2
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                          is_active:
                            type: boolean
                          display_order:
                            type: integer
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/deliveryInstructionOptionResource"
    delete:
      security:
        - bearerAuth: []
      description: Delete delivery instruction option
      parameters:
        - description: Delivery instruction option id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /dietary-preferences:
    get:
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
      responses:
        "200":
          $ref: "./responses.yml#/dietaryPreferenceResources"
    post:
      description: Create dietary preference
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: Vegan
                type: dietary_preferences
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/dietaryPreferenceResource"
  /dietary-preferences/{id}:
    get:
      description: Get dietary preference by id
      parameters:
        - description: Dietary preference id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/dietaryPreferenceResource"
    patch:
      security:
        - bearerAuth: []
      description: Update dietary preference. Only attributes to be updated need to present.
      parameters:
        - description: Dietary preference id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: dietary_preferences
                attributes:
                  title: Vegetarian
                  is_active: true
                  display_order: 2
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                          is_active:
                            type: boolean
                          display_order:
                            type: integer
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/dietaryPreferenceResource"
    delete:
      security:
        - bearerAuth: []
      description: Mark the dietary preference resource as deleted
      parameters:
        - description: Dietary preference id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /driver-license-images/{id}:
    get:
      description: Get courier's driver license image
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
          description: Id of a courier's driver license image
      responses:
        "200":
          content:
            image/*:
              schema:
                type: string
                format: binary
          description: successful
    post:
      description: Update driver license image
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
          description: Id of a courier's driver license image
        - name: _method
          in: query
          required: true
          schema:
            enum:
              - PATCH
            type: string
          example: PATCH
          description: Method
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          $ref: "./responses.yml#/driverLicenseImageResource"
    delete:
      description: Delete courier's driver license image (also makes courier inactive)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
          description: Id of a courier's driver license image
      responses:
        "204":
          description: No content
  /faq-categories:
    get:
      description: List of all FAQ categories
      parameters:
        - $ref: "./parameters.yml#/includeFAQ"
      responses:
        "200":
          $ref: "./responses.yml#/faqCategoryResources"
    post:
      description: Create faq category
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "faq_categories"
                attributes:
                  title: "title"
                  title_translations:
                    en: Title
                    ru: "Title in russian"
                  description: "description"
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        title_translations:
                          type: object
                          description: The full list of translations that the user wants to save.
                          properties:
                            en:
                              type: string
                        description:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/faqCategoryResource"
  /faq-categories/{id}:
    get:
      description: Get faq category
      parameters:
        - description: Id of a faq category
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/faqCategoryResource"
    patch:
      description: Update a faq
      parameters:
        - description: Id of a faq
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "faq_categories"
                attributes:
                  title: "title"
                  description: "description"
                  display_order: 2
                  is_active: false
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        title_translations:
                          type: object
                          description: The full list of translations that the user wants to save.
                          properties:
                            en:
                              type: string
                        description:
                          type: string
                        display_order:
                          type: integer
                        is_active:
                          type: boolean
                      type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/faqCategoryResource"
    delete:
      description: Delete faq category
      parameters:
        - description: Id of a faq category
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /faq-categories/{id}/faq:
    get:
      description: List of all FAQ of the particular category
      parameters:
        - description: id of the FAQ category
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/faqResources"
    post:
      description: Create faq
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "faq"
                attributes:
                  question: "question"
                  answer: "answer"
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        question:
                          type: string
                        answer:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/faqResource"
  /faq/{id}:
    get:
      description: Get faq
      parameters:
        - description: Id of a faq
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/faqResource"
    patch:
      description: Update a faq
      parameters:
        - description: Id of a faq
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "faq"
                attributes:
                  question: "question"
                  answer: "answer"
                  is_active: false
                  display_order: 2
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        question:
                          type: string
                        answer:
                          type: string
                        is_active:
                          type: boolean
                        display_order:
                          type: integer
                      type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/faqResource"
    delete:
      description: Delete faq
      parameters:
        - description: Id of a faq
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /favorites/{id}:
    delete:
      description: Unmark the favorite store for a given consumer by the connection id
      parameters:
        - description: Id of the connection to delete
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /favorite-recipes:
    post:
      description: Mark the recipe as favorite for a given consumer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 1
                type: "recipes"
                relationships:
                  consumer:
                    data:
                      id: 1
                      type: "consumers"
            schema:
              properties:
                data:
                  properties:
                    id:
                      type: integer
                    type:
                      type: string
                    relationships:
                      properties:
                        consumer:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/recipeResource"
  /favorite-recipes/{id}:
    delete:
      description: Unmark the favorite recipe for a given consumer by the connection id
      parameters:
        - description: Id of the recipe to delete
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                relationships:
                  consumer:
                    data:
                      id: 1
                      type: "consumers"
            schema:
              properties:
                data:
                  properties:
                    relationships:
                      properties:
                        consumer:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                  type: object
              type: object
      responses:
        "204":
          description: No content
  /featured-product-categories:
    get:
      description: List of all featured product categories
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/includeFeaturedProductCategory"
      responses:
        "200":
          $ref: "./responses.yml#/featuredProductCategoryResources"
    post:
      description: Create featured product category
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "featured_product_categories"
                attributes:
                  title: "title"
                  display_order: 2
                  is_active: false
                  shown_from: "2020-01-01 00:00:00"
                  shown_until: "2020-01-01 00:00:00"
                relationships:
                  products:
                    data:
                      - type: "products"
                        id: 1
                      - type: "products"
                        id: 2
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        display_order:
                          type: integer
                        is_active:
                          type: boolean
                        shown_from:
                          format: date-time
                          type: string
                        shown_until:
                          format: date-time
                          type: string
                      type: object
                    relationships:
                      properties:
                        products:
                          properties:
                            data:
                              type: array
                              items:
                                properties:
                                  type:
                                    type: string
                                  id:
                                    type: integer
                          type: object
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/featuredProductCategoryResource"
  /featured-product-categories/{id}:
    get:
      description: Get featured product category
      parameters:
        - description: Id of a featured product category
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeFeaturedProductCategory"
      responses:
        "200":
          $ref: "./responses.yml#/featuredProductCategoryResource"
    patch:
      description: Update a featured product category
      parameters:
        - description: Id of a featured product category
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "featured_product_categories"
                attributes:
                  title: "title"
                  display_order: 2
                  is_active: false
                  shown_from: "2020-01-01 00:00:00"
                  shown_until: "2020-01-01 00:00:00"
                relationships:
                  products:
                    data:
                      - type: "products"
                        id: 1
                      - type: "products"
                        id: 2
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        display_order:
                          type: integer
                        is_active:
                          type: boolean
                        shown_from:
                          format: date-time
                          type: string
                        shown_until:
                          format: date-time
                          type: string
                      type: object
                    relationships:
                      properties:
                        products:
                          properties:
                            data:
                              type: array
                              items:
                                properties:
                                  type:
                                    type: string
                                  id:
                                    type: integer
                          type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/featuredProductCategoryResource"
    delete:
      description: Delete featured product category
      parameters:
        - description: Id of a featured product category
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /featured-product-categories/{id}/products:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/includeProductSubcategory"
        - $ref: "./parameters.yml#/filterByAvailableToCoordinates"
        - $ref: "./parameters.yml#/filterByStore"
        - $ref: "./parameters.yml#/filterByStoreProductIsActive"
        - $ref: "./parameters.yml#/filterByStoreProductIsAvailable"
        - $ref: "./parameters.yml#/filterByProductSubcategoryProductCategory"
        - $ref: "./parameters.yml#/filterByCheapestStoreProductDiscount"
      responses:
        "200":
          $ref: "./responses.yml#/productResources"
  /features:
    get:
      description: Get Features
      responses:
        "200":
          $ref: "./responses.yml#/featureResources"
  /features/{id}:
    get:
      description: Get Feature
      parameters:
        - description: Id of the feature
          example: "App\\Features\\ReferralCode"
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/featureResource"
    patch:
      description: Update feature
      parameters:
        - description: Id of the feature
          example: "App\\Features\\ReferralCode"
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "features"
                attributes:
                  is_active: false
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        is_active:
                          type: boolean
                      type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/featureResource"
  /feedbacks:
    post:
      description: Send Feedback
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  message: The best app in my life
                  subject: Compliment
                type: feedbacks
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        message:
                          type: string
                        subject:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/feedbackResource"
  /me:
    get:
      description: Get currently authenticated user
      responses:
        "200":
          $ref: "./responses.yml#/userResource"
  /new-stores:
    get:
      description: >-
        Get the paginated list of newly created (last month) stores. Ordered by recency.
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/latitudeOptional"
        - $ref: "./parameters.yml#/longitudeOptional"
        - $ref: "./parameters.yml#/distance"
        - $ref: "./parameters.yml#/includeStoreImage"
      responses:
        "200":
          $ref: "./responses.yml#/storeResources"
  /orders:
    get:
      description: List all orders. Available for admins only.
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/sortOrder"
        - $ref: "./parameters.yml#/orderFilterOrderType"
        - $ref: "./parameters.yml#/filterByStore"
        - $ref: "./parameters.yml#/filterByConsumer"
        - $ref: "./parameters.yml#/filterByCourier"
        - $ref: "./parameters.yml#/filterByPromoCode"
        - $ref: "./parameters.yml#/filterByOrderState"
        - $ref: "./parameters.yml#/includeOrderCollection"
        - description: Starting date of an order filtering interval (in UTC+0)
          example: "2020-01-01"
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Finishing date of an order filtering interval (in UTC+0)
          example: "2020-01-02"
          in: query
          name: created_to
          required: false
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/orderResources"
      security:
        - bearerAuth: []
  /orders:search:
    get:
      description: Search orders by id and order number
      parameters:
        - description: Search query
          example: 123
          in: query
          name: q
          required: true
          schema:
            type: string
        - $ref: "./parameters.yml#/includeOrderCollection"
      responses:
        "200":
          $ref: "./responses.yml#/orderResources"
  /orders/{id}:
    get:
      description: >-
        Get the order information. Access for administrators and related
        consumer, courier, store storekeepers.
      parameters:
        - description: Id of the order
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeOrderResource"
        - $ref: "./parameters.yml#/paymentFieldSet"
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
      security:
        - bearerAuth: []
  /orders/{id}/proof-of-delivery-images:
    get:
      description: Get list of order's proof of delivery images
      parameters:
        - description: order id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/proofOfDeliveryImageResources"
    post:
      description: Create proof of delivery image
      parameters:
        - description: order id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "201":
          $ref: "./responses.yml#/proofOfDeliveryImageResource"
  /orders/{order}/courier-requests:
    post:
      description: Request courier to serve the order
      parameters:
        - description: order id
          example: 1
          in: path
          name: order
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: courier_requests
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/courierRequestResource"
  /order-states:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
      description: Get the paginated list of all order states
      responses:
        "200":
          $ref: "./responses.yml#/orderStateResources"
    post:
      description: Create order state
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "order_states"
                attributes:
                  title: "title"
                  description: "description"
                  message: "message"
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        description:
                          type: string
                        message:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/orderStateResource"
  /order-states/{id}:
    get:
      description: Get order state
      parameters:
        - description: Id of an order state
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/orderStateResource"
    patch:
      description: Update order state
      parameters:
        - description: Id of an order state
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "order_states"
                attributes:
                  title: "title"
                  description: "description"
                  message: "message"
                  display_order: 1
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        description:
                          type: string
                        message:
                          type: string
                        display_order:
                          type: integer
                      type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/orderStateResource"
  /orders/{id}/payment-intents:
    post:
      description: Create the payment intent for order additional payments. Order should be paid and can't already have tip.
      parameters:
        - description: Id of the order
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              example:
                data:
                  type: payment_intents
                  attributes:
                    event: OrderTip
                    tip: "2.00"
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: object
                      properties:
                        event:
                          type: string
                          enum:
                            - OrderTip
                        tip:
                          type: string
              type: object
        required: true
      responses:
        "201":
          $ref: "./responses.yml#/paymentIntentResource"
        "400":
          $ref: "./responses.yml#/stripeInvalidRequestExceptionResources"
        "402":
          $ref: "./responses.yml#/stripeCardExceptionResources"
  /orders/{id}/payments:
    post:
      description: Pay additional charges for existing order
      parameters:
        - description: Id of an order
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              example:
                data:
                  type: payments
                  attributes:
                    event: OrderTip
                    tip: "2.00"
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: object
                      properties:
                        event:
                          type: string
                          enum:
                            - OrderTip
                        tip:
                          type: string
      responses:
        "201":
          $ref: "./responses.yml#/paymentResource"
        "400":
          $ref: "./responses.yml#/stripeInvalidRequestExceptionResources"
        "402":
          $ref: "./responses.yml#/stripeCardExceptionResources"
  /approved-courier-profile-images:
    post:
      description: Mark courier profile image as approved
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              example:
                data:
                  type: courier_profile_images
                  id: 1
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string

      responses:
        "201":
          $ref: "./responses.yml#/courierProfileImageResource"
  /approved-driver-license-images:
    post:
      description: Mark courier driver license image as approved
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              example:
                data:
                  type: driver_license_images
                  id: 1
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string

      responses:
        "201":
          $ref: "./responses.yml#/driverLicenseImageResource"
  /approved-vehicle-images:
    post:
      description: Mark vehicle image as approved
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              example:
                data:
                  type: vehicle_images
                  id: 1
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string

      responses:
        "201":
          $ref: "./responses.yml#/vehicleImageResource"
  /approved-vehicle-insurance-images:
    post:
      description: Mark vehicle insurance image as approved
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              example:
                data:
                  type: vehicle_insurance_images
                  id: 1
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string

      responses:
        "201":
          $ref: "./responses.yml#/vehicleInsuranceImageResource"
  /approved-vehicle-registration-images:
    post:
      description: Mark vehicle registration image as approved
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              example:
                data:
                  type: vehicle_registration_images
                  id: 1
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string

      responses:
        "201":
          $ref: "./responses.yml#/vehicleRegistrationImageResource"
  /notification-requests:
    get:
      description: Get list of notification requests
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/filterByScheduledAfter"
        - $ref: "./parameters.yml#/filterByScheduledBefore"
      responses:
        "200":
          $ref: "./responses.yml#/notificationRequestResources"
  /password-reset-requests:
    post:
      description: Submit password reset request
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  email: alan@example.com
                type: password_reset_requests
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        email:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    status: We have emailed your password reset link!
                  type: password_reset_requests
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
          description: Password reset request sumbission status
  /password-resets:
    post:
      description: Submit password reset
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  email: alan@example.com
                  password: "12345678"
                  password_confirmation: "12345678"
                  token: >-
                    e42edbb4a03182ebb0dec03ff96e7162854a2cc08fd94d47a96cf3f3df4aee01
                type: password_resets
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        email:
                          type: string
                        password:
                          type: string
                        password_confirmation:
                          type: string
                        token:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    status: Your password has been reset!
                  type: password_resets
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
          description: Password reset submission status
  /payment-intents:
    post:
      description: >-
        Returns a payment intent object and creates a order intent (internally). To apply changes stored in the order intent,
        payment intent must be approved by the frontent side, using the Stripe SDK and the client secret returned in the response.
        Supports both order creation and update (supplement and refund). To distinguish them, client app must send either 
        `lid` or `id` attributes in the request body. If 'lid' is present, order will be updated, otherwise - created.
        Since the endpoint supports refunds as well (when the order is updated to have smaller total), payment intent can be created 
        having `null` as `id` and `client_secret`. In this case no actions from the frontend are required.
      requestBody:
        content:
          application/vnd.api+json:
            examples:
              allAttributesCreate:
                summary: Request with all optional attributes. Creates a new order after the approval.
                value:
                  data:
                    lid: 1
                    attributes:
                      instructions: Please call me
                      is_gift: true
                      recipient_name: John Doe
                      recipient_phone_number: 1234567890
                      tip:
                        type: percent
                        value: 10
                    relationships:
                      address:
                        data:
                          id: 1
                          type: addresses
                      promo_code:
                        data:
                          id: 24
                          type: promo_codes
                      preferences:
                        data:
                          - id: 1
                            type: preferences
                      cart:
                        data:
                          id: 1
                          type: carts
                      delivery_instruction:
                        data:
                          lid: 1
                          type: delivery_instructions
                          attributes:
                            instruction: lean on
                            is_reusable: true
                          relationships:
                            delivery_instruction_options:
                              data:
                                - id: 1
                                  type: delivery_instruction_options
                                - id: 2
                                  type: delivery_instruction_options
                    type: orders
              allAttributesUpdate:
                summary: Request with all optional attributes. Updates the existing order after the approval.
                value:
                  data:
                    id: 256
                    attributes:
                      instructions: Please call me
                      is_gift: true
                      recipient_name: John Doe
                      recipient_phone_number: 1234567890
                      tip:
                        type: percent
                        value: 10
                    relationships:
                      address:
                        data:
                          id: 1
                          type: addresses
                      promo_code:
                        data:
                          id: 24
                          type: promo_codes
                      preferences:
                        data:
                          - id: 1
                            type: preferences
                      cart:
                        data:
                          id: 1
                          type: carts
                      delivery_instruction:
                        data:
                          lid: 1
                          type: delivery_instructions
                          attributes:
                            instruction: lean on
                            is_reusable: true
                          relationships:
                            delivery_instruction_options:
                              data:
                                - id: 1
                                  type: delivery_instruction_options
                                - id: 2
                                  type: delivery_instruction_options
                    type: orders
              updateAddCustomRefund:
                summary: Requests a partial refund for the order. The order will be updated to have smaller total.
                value:
                  data:
                    id: 256
                    attributes:
                     payment_method: default_card
                     custom_refund: 10
                     custom_refund_description: "Refund for the missing item"
                    type: orders
            schema:
              properties:
                data:
                  properties:
                    id:
                      type: integer
                    lid:
                      type: integer
                    attributes:
                      properties:
                        payment_method:
                          type: string
                        custom_refund:
                          type: number
                        custom_refund_description:
                          type: string
                        instructions:
                          type: string
                        tip:
                          properties:
                            type:
                              enum:
                                - percent
                                - flat
                              type: string
                            value:
                              type: number
                          type: object
                      required:
                        - cart
                      type: object
                    relationships:
                      properties:
                        address:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        preferences:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                        cart:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      required:
                        - address
                      type: object
                    type:
                      type: string
                  required:
                    - type
                    - attributes
                    - relationships
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/paymentIntentResource"
        "422":
          $ref: "./responses.yml#/lowOrderTotalExceptionResources"
      security:
        - bearerAuth: []
  /preferences:
    get:
      description: List delivery preferences
      parameters:
        - $ref: "./parameters.yml#/limit"
      responses:
        "200":
          $ref: "./responses.yml#/preferenceResources"
  /preferences/{id}:
    get:
      description: Get delivery preference
      parameters:
        - description: Id of the delivery preference
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/preferenceResource"
    patch:
      description: Update delivery preference
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: preferences
                attributes:
                  title: "title"
                  title_translations: { en: "title" }
                  description: "description"
                  description_translations: { en: "description" }
                  is_active: true
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        title_translations:
                          type: object
                          description: The full list of translations that the user wants to save.
                          properties:
                            en:
                              type: string
                        description:
                          type: string
                        description_translations:
                          type: object
                          description: The full list of translations that the user wants to save.
                          properties:
                            en:
                              type: string
                      type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/preferenceResource"

  /product-categories/{id}/product-subcategories:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/sortProductSubcategory"
        - $ref: "./parameters.yml#/filterByIsActive"
      responses:
        "200":
          $ref: "./responses.yml#/productSubcategoryResources"
    post:
      security:
        - bearerAuth: []
      description: Store product subcategory to the given product category.
      parameters:
        - description: Product category id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: product_subcategories
                attributes:
                  title: Pear
                  title_translations:
                    en: Apple
                    ru: Яблоко
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title_translations:
                            type: object
                            description: The full list of translations that the user wants to save.
                            properties:
                              en:
                                type: string
                        type: object
                      relationships:
                        properties:
                          product_category:
                            properties:
                              id:
                                type: string
                              type:
                                type: string
                            type: object
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/productSubcategoryResource"
  /product-categories/{id}/products:
    get:
      description: List products of the given product category.
      parameters:
        - description: Id of the product category
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/sortProduct"
        - $ref: "./parameters.yml#/filterByIsAvailable"
        - $ref: "./parameters.yml#/filterByBrand"
        - $ref: "./parameters.yml#/filterByCuisine"
        - $ref: "./parameters.yml#/filterByDietaryPreference"
        - $ref: "./parameters.yml#/filterByAvailableToCoordinates"
        - $ref: "./parameters.yml#/filterByStore"
        - $ref: "./parameters.yml#/filterByStoreProductIsActive"
        - $ref: "./parameters.yml#/filterByStoreProductIsAvailable"
        - $ref: "./parameters.yml#/filterByCheapestStoreProductDiscount"
        - $ref: "./parameters.yml#/includeProduct"
      responses:
        "200":
          $ref: "./responses.yml#/productResources"
  /store-product-categories/{id}:
    delete:
      description: Delete Product Category. Hard Deletion.
      parameters:
        - description: Product Category Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
    get:
      description: Get Product Category.
      parameters:
        - description: Product Category Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/storeProductCategoryResource"
    patch:
      description: Update Product Category.
      parameters:
        - description: Product Category Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: Instruments
                  display_order: 1
                type: store_product_categories
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                          display_order:
                            type: integer
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/storeProductCategoryResource"
  /store-product-categories/{id}/store-products:
    get:
      parameters:
        - description: Product Category Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/includeStoreProduct"
        - $ref: "./parameters.yml#/sortStoreProduct"
      responses:
        "200":
          $ref: "./responses.yml#/storeProductResources"
      security:
        - bearerAuth: []
    post:
      description: Create product entity.
      parameters:
        - description: Product category id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  description: Apple fruit
                  image: https://images.com/products/image.png
                  is_available: true
                  price: 5.55
                  discount_percent: 0
                  title: Apple
                type: products
                relationships:
                  product:
                    data:
                      id: 1
                      type: products
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          description:
                            type: string
                          image:
                            type: string
                          is_available:
                            type: boolean
                          price:
                            type: number
                          discount_percent:
                            type: number
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/storeProductResource"
  /product-images/{id}:
    delete:
      description: Delete product image
      parameters:
        - description: Id of a product image
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
    get:
      description: Get Product image
      parameters:
        - description: Id of a product image
          example: 5
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/productImageResource"
    post:
      description: Update product image
      parameters:
        - description: Id of a product image
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: ""
          example: PATCH
          in: query
          name: _method
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/productImageResource"
  /store-products/{id}:
    get:
      description: Get product info.
      parameters:
        - description: Product id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeStoreProduct"
      responses:
        "200":
          $ref: "./responses.yml#/storeProductResource"
    patch:
      description: Update product info. Only attributes to be updated need to present.
      parameters:
        - description: Product id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  description: Apple fruit
                  image: https://images.com/products/image.png
                  is_available: true
                  price: 5.55
                  discount_percent: 10
                  title: Apple
                  is_active: true
                relationships:
                  store_product_category:
                    data:
                      id: 1
                      type: store_product_categories
                  product:
                    data:
                      id: 1
                      type: products
                type: store_products
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          description:
                            type: string
                          image:
                            type: string
                          is_available:
                            type: boolean
                          price:
                            type: number
                          discount_percent:
                            type: number
                          title:
                            type: string
                          is_active:
                            type: boolean
                        type: object
                      relationships:
                        properties:
                          product_category:
                            properties:
                              id:
                                type: string
                              type:
                                type: string
                            type: object
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/storeProductResource"
  /store-products/{id}/product-images:
    get:
      description: Get product's images
      parameters:
        - description: Id of a product
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
      responses:
        "200":
          $ref: "./responses.yml#/productImageResources"
    post:
      description: Add product image
      parameters:
        - description: Id of a product
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "201":
          $ref: "./responses.yml#/productImageResource"
  /store-products/{id}/similar-store-products:
    get:
      description: List similar products
      parameters:
        - description: Id of a product
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
      responses:
        "200":
          $ref: "./responses.yml#/storeProductResources"
  /store-products/{id}/recommended-store-products:
    get:
      description: >-
        List recommended products for a particular product having the same
        product category
      parameters:
        - description: id of the product
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeStoreProduct"
      responses:
        "200":
          $ref: "./responses.yml#/storeProductResources"

  /product-subcategories:search:
    get:
      description: Search the product subcategories by title
      parameters:
        - description: Search query
          example: cakes
          in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/productSubcategoryResources"
  /product-subcategories:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/includeProductSubcategories"
        - $ref: "./parameters.yml#/sortProductSubcategory"
        - $ref: "./parameters.yml#/filterByIsActive"
        - $ref: "./parameters.yml#/filterByProductCategory"
      responses:
        "200":
          $ref: "./responses.yml#/productSubcategoryResources"
  /product-subcategories/{id}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - description: id of the product subcategory
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeProductSubcategory"
      responses:
        "200":
          $ref: "./responses.yml#/productSubcategoryResource"
    patch:
      security:
        - bearerAuth: []
      description: Update product subcategory info. Only attributes to be updated need to present.
      parameters:
        - description: Product subcategory id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: product_subcategories
                attributes:
                  title: Pear
                  title_translations:
                    en: Apple
                    ru: Яблоко
                  is_active: true
                  order_column: 1
                relationships:
                  product_category:
                    id: 13
                    type: product_categories
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title_translations:
                            type: object
                            description: The full list of translations that the user wants to save.
                            properties:
                              en:
                                type: string
                          order_column:
                            type: integer
                            description: The order_column id that the user wants to swap this item with.
                          is_active:
                            type: boolean
                        type: object
                      relationships:
                        properties:
                          product_category:
                            properties:
                              id:
                                type: string
                              type:
                                type: string
                            type: object
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/productSubcategoryResource"
    delete:
      security:
        - bearerAuth: []
      description: Mark the product subcategory resource as deleted
      parameters:
        - description: Product subcategory id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/productSubcategoryResource"
  /product-subcategories/{id}/products:
    get:
      description: List products of the given product subcategory.
      parameters:
        - description: Id of the product subcategory
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/sortProduct"
        - $ref: "./parameters.yml#/filterByIsAvailable"
        - $ref: "./parameters.yml#/filterByBrand"
        - $ref: "./parameters.yml#/filterByCuisine"
        - $ref: "./parameters.yml#/filterByDietaryPreference"
        - $ref: "./parameters.yml#/filterByAvailableToCoordinates"
        - $ref: "./parameters.yml#/filterByStore"
        - $ref: "./parameters.yml#/filterByStoreProductIsActive"
        - $ref: "./parameters.yml#/filterByStoreProductIsAvailable"
        - $ref: "./parameters.yml#/filterByProductSubcategoryProductCategory"
        - $ref: "./parameters.yml#/filterByCheapestStoreProductDiscount"
        - $ref: "./parameters.yml#/includeProduct"
      responses:
        "200":
          $ref: "./responses.yml#/productResources"
  /promo-codes:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/includeStores"
        - $ref: "./parameters.yml#/filterByIsActive"
        - $ref: "./parameters.yml#/filterByValidityType"
        - $ref: "./parameters.yml#/filterByVisibilityType"
        - $ref: "./parameters.yml#/sortPromoCode"
      description: Get the paginated list of all promo codes
      responses:
        "200":
          $ref: "./responses.yml#/promoCodeResources"
    post:
      security:
        - bearerAuth: []
      description: Add the promo code entity
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: object
                      properties:
                        code:
                          type: string
                        description:
                          type: string
                        discount:
                          type: object
                          properties:
                            type:
                              enum:
                                - cash
                                - percentage
                              type: string
                            value:
                              type: string
                        validity_type:
                          type: string
                        activation_date:
                          type: string
                        expiration_date:
                          type: string
                        usage_limit:
                          type: number
                        visibility_type:
                          type: string
                        is_active:
                          type: boolean
                        minimum_order_amount:
                          type: string
                    relationships:
                      type: object
                      properties:
                        stores:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              type:
                                type: string
                        area:
                          properties:
                            data:
                              properties:
                                id:
                                  type: string
                                type:
                                  type: string
                              type: object
                          type: object
            example:
              data:
                type: promo_codes
                attributes:
                  code: fest2
                  description: Free Shipping (testing)
                  discount:
                    type: percentage
                    value: 15
                  validity_type: Permanent
                  activation_date: "2022-12-07"
                  expiration_date: "2022-12-27"
                  usage_limit: 1000
                  visibility_type: Private
                  is_active: true
                  minimum_order_amount: "20.25"
                relationships:
                  stores:
                    data:
                      - id: 1
                        type: stores
                      - id: 2
                        type: stores
                  area:
                    data:
                      id: 1
                      type: areas
      responses:
        "201":
          $ref: "./responses.yml#/promoCodeResource"
  /promo-codes:search:
    get:
      description: Search the promo codes by code
      parameters:
        - description: Search query
          example: XMAS13
          in: query
          name: q
          required: true
          schema:
            type: string
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/includeStores"
      responses:
        "200":
          $ref: "./responses.yml#/promoCodeResources"
  /promo-codes/{id}:
    get:
      description: Get the promo code resource
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/includeStores"
        - description: Promo code id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/promoCodeResource"
    patch:
      description: Update the promo code resource. The stores in relationships part will be completely rewritten if the attribute `relationships` is sent with the JSON body.
      security:
        - bearerAuth: []
      parameters:
        - description: Promo code id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: object
                      properties:
                        code:
                          type: string
                        description:
                          type: string
                        discount:
                          type: object
                          properties:
                            type:
                              enum:
                                - cash
                                - percentage
                              type: string
                            value:
                              type: string
                        validity_type:
                          type: string
                        activation_date:
                          type: string
                        expiration_date:
                          type: string
                        usage_limit:
                          type: number
                        visibility_type:
                          type: string
                        is_active:
                          type: boolean
                        usage_count:
                          type: boolean
                        minimum_order_amount:
                          type: string
                    relationships:
                      type: object
                      properties:
                        stores:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              type:
                                type: string
                        area:
                          properties:
                            data:
                              properties:
                                id:
                                  type: string
                                type:
                                  type: string
                              type: object
                          type: object
            example:
              data:
                type: promo_codes
                attributes:
                  code: west2
                  description: Hue
                  discount:
                    type: cash
                    value: 21
                  validity_type: Defined
                  activation_date: "2023-12-17"
                  expiration_date: "2023-12-28"
                  usage_limit: 101
                  visibility_type: Public
                  is_active: true
                  usage_count: 13
                  minimum_order_amount: "0.00"
                relationships:
                  stores:
                    data:
                      - id: 1
                        type: stores
                      - id: 2
                        type: stores
                  area:
                    data:
                      id: 1
                      type: areas
      responses:
        "200":
          $ref: "./responses.yml#/promoCodeResource"
    delete:
      description: Mark the promo code resource as deleted
      security:
        - bearerAuth: []
      parameters:
        - description: Promo code id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/promoCodeResource"
  /promo-codes/new:
    get:
      security:
        - bearerAuth: []
      description: Get the newly generated unique promo code (with length of 6)
      responses:
        "200":
          $ref: "./responses.yml#/newPromoCodeResource"
  /proof-of-delivery-images/{id}:
    get:
      description: Get proof of delivery image
      parameters:
        - description: get proof of delivery images
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            image/*:
              schema:
                properties:
                  image:
                    type: string
                    format: binary
                type: object
          description: successful
    delete:
      description: Delete proof of delivery image
      parameters:
        - description: Proof of delivery image id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /public-promo-codes:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/filterByStores"
        - $ref: "./parameters.yml#/filterByAddress"
      description: Get the paginated list of public available promo codes.
        Available means that the promo code is active, number of usages is less than limit,
        eSystemType is DeliverAll or General, code was not used by authorized user before (if token is sent),
        code is permanent or the activity period is now. Authorization is optional.
        `filter[stores]` query parameter should be set to return public store specific promo codes.
      responses:
        "200":
          $ref: "./responses.yml#/promoCodeResources"
  /pusher/beams-auth:
    get:
      description: Endpoint used by pusher to generate user authentication token
      parameters:
        - description: Id of a user to authenticate
          example: 1
          in: query
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        200:
          content:
            application/json:
              example:
                token: "dummy-token"
              schema:
                properties:
                  token:
                    type: string
          description: Pusher Beams token to authenticate user
  /recipes:
    get:
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/includeRecipe"
      responses:
        "200":
          $ref: "./responses.yml#/recipeResources"
    post:
      description: Create recipe
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: "Recipe title"
                  description: "Recipe description"
                  servings: 2
                  duration: 10
                  difficulty: "hard"
                  instructions: "Recipe instructions"
                  nutrition_facts:
                    fat: 32
                    anything: 100
                type: recipes
                relationships:
                  recipe_ingredients:
                    - type: "recipe_ingredients"
                      attributes:
                        quantity: 1
                      relationships:
                        ingredient:
                          data:
                            type: "ingredients"
                            id: 1
                        measurement_unit:
                          data:
                            type: "measurement_units"
                            id: 1
                    - type: "recipe_ingredients"
                      attributes:
                        quantity: 2
                      relationships:
                        ingredient:
                          data:
                            type: "ingredients"
                            id: 2
                        measurement_unit:
                          data:
                            type: "measurement_units"
                            id: 2
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/recipeResource"
  /recipes/{id}:
    get:
      description: Get recipe resource
      parameters:
        - description: id of recipe
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeRecipe"
      responses:
        "200":
          $ref: "./responses.yml#/recipeResource"
    patch:
      security:
        - bearerAuth: []
      description: Update recipe. Only attributes to be updated need to present.
      parameters:
        - description: Recipe id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: recipes
                attributes:
                  title: "Recipe title"
                  description: "Recipe description"
                  servings: 2
                  duration: 10
                  difficulty: "hard"
                  instructions: "Recipe instructions"
                  nutrition_facts:
                    fat: 32
                    anything: 100
                relationships:
                  cuisines:
                    data:
                      - id: 1
                        type: cuisines
                  relationships:
                    recipe_ingredients:
                      - id: 1
                        type: "recipe_ingredients"
                        attributes:
                          quantity: 1
                        relationships:
                          ingredient:
                            data:
                              type: "ingredients"
                              id: 1
                          measurement_unit:
                            data:
                              type: "measurement_units"
                              id: 1
                      - type: "recipe_ingredients"
                        attributes:
                          quantity: 2
                        relationships:
                          ingredient:
                            data:
                              type: "ingredients"
                              id: 2
                          measurement_unit:
                            data:
                              type: "measurement_units"
                              id: 2

            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title_translations:
                            type: object
                            description: The full list of translations that the user wants to save.
                            properties:
                              en:
                                type: string
                          order_column:
                            type: integer
                            description: The order_column id that the user wants to swap this item with.
                          is_active:
                            type: boolean
                        type: object
                      relationships:
                        properties:
                          product_category:
                            properties:
                              id:
                                type: string
                              type:
                                type: string
                            type: object
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/recipeResource"
    delete:
      security:
        - bearerAuth: []
      description: Mark the recipe resource as deleted
      parameters:
        - description: recipe id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /recipes/{id}/alternative-recipes:
    get:
      description: Get alternative recipes
      parameters:
        - description: Id of a recipe
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/includeRecipe"
      responses:
        "200":
          $ref: "./responses.yml#/recipeResources"
  /recipes/{id}/recipe-images:
    get:
      description: Get recipe's images
      parameters:
        - description: Id of a recipe
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
      responses:
        "200":
          $ref: "./responses.yml#/recipeImageResources"
    post:
      description: Add recipe image
      parameters:
        - description: Id of a recipe
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "201":
          $ref: "./responses.yml#/recipeResource"
  /recipe-images/{id}:
    delete:
      description: Delete recipe image
      parameters:
        - description: Id of a recipe image
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
    get:
      description: Get recipe image
      parameters:
        - description: Id of a recipe image
          example: 5
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/recipeImageResource"
    post:
      description: Update recipe image
      parameters:
        - description: Id of a recipe image
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: ""
          example: PATCH
          in: query
          name: _method
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/recipeImageResource"
  /recipes/{id}/recipe-ingredients:
    get:
      description: Get recipe's ingredients
      parameters:
        - description: Id of a recipe
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/includeRecipeIngredient"
      responses:
        "200":
          $ref: "./responses.yml#/recipeIngredientResources"
    post:
      security:
        - bearerAuth: []
      description: Create recipe ingredient
      parameters:
        - description: Id of a recipe
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: recipe_ingredients
                attributes:
                  quantity: 2
                relationships:
                  ingredient:
                    data:
                      id: 3
                      type: ingredients
                  measurement_unit:
                    data:
                      id: 8
                      type: measurement_units
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        quantity:
                          type: number
                      type: object
                    relationships:
                      properties:
                        ingredient:
                          properties:
                            id:
                              type: string
                            type:
                              type: string
                          type: object
                        measurement_unit:
                          properties:
                            id:
                              type: string
                            type:
                              type: string
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/recipeIngredientResource"
  /recipes/{id}/recommended-products:
    get:
      description: Get recommended products for recipe
      parameters:
        - description: Id of a recipe
          example: 4
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/sortProduct"
        - $ref: "./parameters.yml#/filterByIsAvailable"
        - $ref: "./parameters.yml#/filterByBrand"
        - $ref: "./parameters.yml#/filterByCuisine"
        - $ref: "./parameters.yml#/filterByDietaryPreference"
        - $ref: "./parameters.yml#/filterByAvailableToCoordinates"
        - $ref: "./parameters.yml#/includeProductCollection"
      responses:
        "200":
          $ref: "./responses.yml#/productResources"
  /recipe-ingredients/{id}:
    get:
      description: Get recipe ingredient
      parameters:
        - description: Id of a recipe ingredient
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeRecipeIngredient"
      responses:
        "200":
          $ref: "./responses.yml#/recipeIngredientResource"
    patch:
      security:
        - bearerAuth: []
      description: Update recipe ingredient. Only attributes to be updated need to present.
      parameters:
        - description: Id of a recipe ingredient
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: recipe_ingredients
                attributes:
                  quantity: 4
                relationships:
                  ingredient:
                    data:
                      id: 4
                      type: ingredients
                  measurement_unit:
                    data:
                      id: 12
                      type: measurement_units
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        quantity:
                          type: number
                      type: object
                    relationships:
                      properties:
                        ingredient:
                          properties:
                            id:
                              type: string
                            type:
                              type: string
                          type: object
                        measurement_unit:
                          properties:
                            id:
                              type: string
                            type:
                              type: string
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/recipeIngredientResource"
    delete:
      security:
        - bearerAuth: []
      description: Delete recipe ingredient
      parameters:
        - description: Id of a recipe ingredient
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /background-removed-images:
    post:
      description: Remove background from an updloaded image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          content:
            image/*:
              schema:
                properties:
                  image:
                    type: string
                    format: binary
                type: object
          description: successful
  /measurement-units:
    get:
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
      responses:
        "200":
          $ref: "./responses.yml#/measurementUnitResources"
    post:
      description: Create ingredient unit
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: "Tablespoon"
                  symbol: "TBSP"
                type: measurement_units
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                          symbol:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/measurementUnitResource"
  /measurement-units/{id}:
    get:
      description: Get ingredient unit
      parameters:
        - description: id of ingredient unit
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/measurementUnitResource"
    patch:
      security:
        - bearerAuth: []
      description: Update ingredient unit. Only attributes to be updated need to present.
      parameters:
        - description: Ingredient unit id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: recipes
                attributes:
                  title: "Gram"
                  symbol: "g"
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                          symbol:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/measurementUnitResource"
    delete:
      security:
        - bearerAuth: []
      description: Mark the ingredient unit resource as deleted
      parameters:
        - description: recipe id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /ingredients:
    get:
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
      responses:
        "200":
          $ref: "./responses.yml#/ingredientResources"
    post:
      description: Create ingredient
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: "Banana"
                type: ingredients
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/ingredientResource"
  /ingredients/{id}:
    get:
      description: Get ingredient
      parameters:
        - description: id of ingredient
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/ingredientResource"
    patch:
      security:
        - bearerAuth: []
      description: Update ingredient. Only attributes to be updated need to present.
      parameters:
        - description: Ingredient id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: recipes
                attributes:
                  title: "Egg"
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/ingredientResource"
    delete:
      security:
        - bearerAuth: []
      description: Mark the ingredient resource as deleted
      parameters:
        - description: recipe id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /delivery-fees:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
      responses:
        "200":
          $ref: "./responses.yml#/deliveryFeeResources"
    post:
      description: Create delivery fee
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                    base_delivery_fee: "6.99"
                    base_delivery_fee_distance: "5.000"
                    per_unit_delivery_fee: "2.0"
                    per_unit_delivery_fee_distance_limit: "30.000"
                    country_code: "US"
                    unit: "mile"
                type: delivery_fees
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          base_delivery_fee:
                            type: string
                          base_delivery_fee_distance:
                            type: string
                          per_unit_delivery_fee:
                            type: string
                          per_unit_delivery_fee_distance_limit:
                            type: string
                          country_code:
                            type: string
                          unit:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/deliveryFeeResource"
  /delivery-fees/{id}:
    get:
      description: Get delivery fee
      security:
        - bearerAuth: []
      parameters:
        - description: id of delivery fee
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/deliveryFeeResource"
    patch:
      security:
        - bearerAuth: []
      description: Update delivery fee. Only attributes to be updated need to present.
      parameters:
        - description: Delivery fee id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: delivery_fees
                attributes:
                  base_delivery_fee: "6.99"
                  base_delivery_fee_distance: "5.000"
                  per_unit_delivery_fee: "2.0"
                  per_unit_delivery_fee_distance_limit: "30.000"
                  country_code: "US"
                  unit: "mile"
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          base_delivery_fee:
                            type: string
                          base_delivery_fee_distance:
                            type: string
                          per_unit_delivery_fee:
                            type: string
                          per_unit_delivery_fee_distance_limit:
                            type: string
                          country_code:
                            type: string
                          unit:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/deliveryFeeResource"
    delete:
      security:
        - bearerAuth: []
      description: Hard delete the delivery fee resource
      parameters:
        - description: delivery fee id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /refunded-orders:
    post:
      description: Partially refund the contents of the order.
        Can't be used to update anything except the order items.
        Only the order in the state "placed" can be updated.
        As a JSON body to the post request the endpoint expects new contents of the cart.
        The difference will be calculated by the by the backend automatically.
        The endpoint updates the order entity, the order items collection, recalculates totals,
        sends the request for refund to stripe and creates corresponding payment entity with type "OrderRefund".
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 42
                type: orders
                attributes:
                  cart:
                    - quantity: "3"
                      store_product_id: "1"
                    - quantity: "1"
                      store_product_id: "3"
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        cart:
                          items:
                            properties:
                              store_product_id:
                                type: integer
                              quantity:
                                type: number
                            required:
                              - quantity
                              - store_product_id
                            type: object
                          type: array
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
        "422":
          $ref: "./responses.yml#/lowOrderTotalExceptionResources"
      security:
        - bearerAuth: []
  /register:
    post:
      parameters:
        - $ref: "./parameters.yml#/referralCode"
      description: Register a new consumer user
      requestBody:
        content:
          application/json:
            example:
              name: "Alan Turing"
              email: "alan@example.com"
              password: "12345678"
              password_confirmation: "12345678"
              userable_type: "App\\Models\\Consumer"
            schema:
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
                userable_type:
                  type: string
              type: object
        required: true
      responses:
        "201":
          description: Successful consumer user registration
        "422":
          description: Unsuccessful consumer user registration
  /review-options:
    get:
      description: List review options
      parameters:
        - $ref: "./parameters.yml#/limit"
      responses:
        "200":
          $ref: "./responses.yml#/reviewOptionResources"
    post:
      description: Create review option
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "review_options"
                attributes:
                  title: "review"
                  title_translations:
                    en: "review"
                  rating: 3
                  type: "consumer"
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        title_translations:
                          properties:
                            en:
                              type: string
                          type: object
                        rating:
                          type: integer
                        type:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/reviewOptionResource"
  /review-options/{id}:
    get:
      description: Show review option
      parameters:
        - description: Id of a review option
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/reviewOptionResource"
    patch:
      description: Update review option
      parameters:
        - description: Id of a review option
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "review_options"
                attributes:
                  title: "review"
                  title_translations:
                    en: "review"
                  rating: 3
                  type: "consumer"
                  is_active: true
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        title_translations:
                          properties:
                            en:
                              type: string
                          type: object
                        rating:
                          type: integer
                        type:
                          type: string
                        is_active:
                          type: boolean
                        order_column:
                          type: integer
                      type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/reviewOptionResource"
    delete:
      description: Delete review option
      parameters:
        - description: Id of a review option
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /reviews/{id}:
    get:
      description: Get review resource
      parameters:
        - description: id of Review
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/reviewResource"
  /sanctum/token:
    post:
      description: Generate Auth token for the user
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  device_name: My iPhone
                  email: alan@example.com
                  password: "1235"
                type: sanctum_tokens
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        device_name:
                          type: string
                        email:
                          type: string
                        password:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          content:
            application/vnd.api+json:
              example:
                data:
                  attribuites:
                    sanctum_token: 1|ufGr3t0yDbj3orxcWefU4phYVBJTcYgsGvaVhkwE
                  relationships:
                    user:
                      data:
                        id: 1
                        type: users
                  type: sanctum_tokens
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          sanctum_token:
                            type: string
                        type: object
                      relationships:
                        properties:
                          user:
                            properties:
                              data:
                                type: object
                            type: object
                        type: object
                    type: object
                type: object
          description: User's Auth token
  /search:
    get:
      description: Search over Stores and Products
      parameters:
        - description: Search query
          example: European
          in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                  data:
                    products: []
                    stores:
                      - cuisines:
                          - id: 1
                            image: https://images.com/cuisines/image.png
                            title: Halal
                          - id: 2
                            image: https://images.com/cuisines/image.png
                            title: Kosher
                          - id: 4
                            image: https://images.com/cuisines/image.png
                            title: Mediterranean
                        delivery_duration: 3600
                        id: 2
                        image: https://images.com/stores/image.png
                        minimum_order: 0
                        rating: 4.9
                        title: European Foods
                items:
                  properties:
                    data:
                      items:
                        properties:
                          products:
                            type: array
                          stores:
                            properties:
                              cuisines:
                                items:
                                  properties:
                                    id:
                                      type: integer
                                    image:
                                      type: string
                                    title:
                                      type: string
                                  type: object
                                type: array
                              delivery_duration:
                                type: integer
                              id:
                                description: Id of the store
                                type: integer
                              image:
                                type: string
                              minimum_order:
                                type: integer
                              rating:
                                type: number
                              title:
                                type: string
                            type: array
                      type: object
                type: object
          description: Stores and Products matching Search query
  /settings:
    get:
      security:
        - bearerAuth: []
      description: Get the list of all settings groups
      responses:
        "200":
          $ref: "./responses.yml#/settingsResources"
  /settings/{id}:
    get:
      security:
        - bearerAuth: []
      description: Get the settings resource
      responses:
        "200":
          $ref: "./responses.yml#/settingsResource"
    patch:
      security:
        - bearerAuth: []
      description: Update general settings. Only attributes to update must present
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            example:
              data:
                type: settings
                attributes:
                  settings:
                    distance: "15000"
                    start_time: 10:00
                    end_time: 20:00
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: object
                      properties:
                        settings:
                          type: object
                          properties:
                            distance:
                              type: string
                            start_time:
                              type: string
                            end_time:
                              type: string
      responses:
        "200":
          $ref: "./responses.yml#/settingsResource"   
  /static-pages:
    get:
      description: Get static pages
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/filterByIsActive"
      responses:
        "200":
          $ref: "./responses.yml#/staticPageResources"
    post:
      description: Create static page
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "static_pages"
                attributes:
                  title: "title"
                  description: "description"
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        description:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/cancelReasonResource"
  /static-pages/{id}:
    get:
      description: Get static page
      parameters:
        - description: Static page id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/staticPageResource"
    patch:
      description: Update static page
      parameters:
        - description: Id of a static page
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "static_pages"
                attributes:
                  title: "title"
                  description: "description"
                  is_active: false
                  display_order: 1
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        description:
                          type: string
                        is_active:
                          type: boolean
                        display_order:
                          type: integer
                      type: object
                  type: object
              type: object
      responses:
        "200":
          $ref: "./responses.yml#/staticPageResource"
    delete:
      description: Delete static page
      parameters:
        - description: Id of a static page
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /store-categories:
    get:
      description: LIST Store Categories
      responses:
        "200":
          $ref: "./responses.yml#/storeCategoryResources"
  /store-categories/{id}/stores:
    get:
      description: LIST Stores from Store Categories
      parameters:
        - description: id of the store category
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/latitude"
        - $ref: "./parameters.yml#/longitude"
        - $ref: "./parameters.yml#/distance"
        - $ref: "./parameters.yml#/sort"
        - $ref: "./parameters.yml#/filterByCuisine"
        - $ref: "./parameters.yml#/include"
      responses:
        "200":
          $ref: "./responses.yml#/storeResources"
  /storekeeper-database-notifications:
    post:
      description: Send push notifications to all storekeepers (if area is provided then to all storekeepers within area)
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: Title
                  body: Body
                type: storekeeper_database_notifications
                relationships:
                  area:
                    data:
                      id: 1
                      type: areas
                  areas:
                    data:
                      - id: 1
                        type: areas
                      - id: 2
                        type: areas
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        title:
                          type: string
                        body:
                          type: string
                      type: object
                    relationships:
                      properties:
                        area:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        areas:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                  type: object
      responses:
        "200":
          description: successful request
  /storekeeper-mails:
    post:
      description: Send mail to all storekeepers (if area is provided then to all storekeepers within area)
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  subject: Subject
                  body: Body
                type: storekeeper_mails
                relationships:
                  area:
                    data:
                      id: 1
                      type: areas
                  areas:
                    data:
                      - id: 1
                        type: areas
                      - id: 2
                        type: areas
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        subject:
                          type: string
                        body:
                          type: string
                      type: object
                    relationships:
                      properties:
                        area:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        areas:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                      type: object
                  type: object
      responses:
        "200":
          description: successful request
          content:
            application/vnd.api+json:
              example:
                data:
                  type: storekeeper_mails
                  attributes:
                    status: "Mail sent"
                  relationships:
                    area:
                      data:
                        id: 1
                        type: areas
  /storekeeper-notifications:
    post:
      description: Send database notifications to all storekeepers (if area is provided then to all storekeepers within area)
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: Title
                  body: Body
                type: storekeeper_notifications
                relationships:
                  area:
                    data:
                      id: 1
                      type: areas
                  areas:
                    data:
                      - id: 1
                        type: areas
                      - id: 2
                        type: areas
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        title:
                          type: string
                        body:
                          type: string
                      type: object
                    relationships:
                      properties:
                        area:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        areas:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                  type: object
      responses:
        "200":
          description: successful request
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    status: "Database notifications sent"
                  type: storekeeper_notifications
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
  /storekeepers:
    get:
      description: Get the list of all storekeepers. For Admins only.
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/includeUser"
      responses:
        "200":
          $ref: "./responses.yml#/storekeeperResources"
      security:
        - bearerAuth: []
  /storekeepers/{storekeeper}/passwords:
    patch:
      description: Update storekeeper's password
      parameters:
        - description: Id of the courier
          example: 1
          in: path
          name: storekeeper
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  new_password: HueHue
                  old_password: "123456"
                type: passwords
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        new_password:
                          type: string
                        old_password:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/passwordResource"
  /storekeepers/{storekeeper}/stores:
    get:
      description: Get Storekeepers's stores
      parameters:
        - description: Id of the courier
          example: 1
          in: path
          name: storekeeper
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/include"
      responses:
        "200":
          $ref: "./responses.yml#/storeResources"
    post:
      description: Creates store for storekeeper
      parameters:
        - description: Id of the courier
          example: 1
          in: path
          name: storekeeper
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  address: Address
                  delivery_duration: 1800
                  latitude: 37.78154
                  longitude: -121.9799693
                  phone_number: 456456456456
                  schedule:
                    friday:
                      end_time: "21:00"
                      start_time: "14:00"
                    monday:
                      end_time: "17:00"
                      start_time: "10:00"
                    saturday:
                      end_time: "22:00"
                      start_time: "15:00"
                    sunday:
                      end_time: "23:00"
                      start_time: "16:00"
                    thursday:
                      end_time: "20:00"
                      start_time: "13:00"
                    tuesday:
                      end_time: "18:00"
                      start_time: "11:00"
                    wednesday:
                      end_time: "19:00"
                      start_time: "12:00"
                  title: All in 1 Grocery
                type: stores
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        address:
                          type: string
                        delivery_duration:
                          type: integer
                        latitude:
                          type: integer
                        longitude:
                          type: integer
                        phone_number:
                          type: integer
                        schedule:
                          properties:
                            friday:
                              properties:
                                end_time:
                                  type: string
                                start_time:
                                  type: string
                              type: object
                            monday:
                              properties:
                                end_time:
                                  type: string
                                start_time:
                                  type: string
                              type: object
                            saturday:
                              properties:
                                end_time:
                                  type: string
                                start_time:
                                  type: string
                              type: object
                            sunday:
                              properties:
                                end_time:
                                  type: string
                                start_time:
                                  type: string
                              type: object
                            thursday:
                              properties:
                                end_time:
                                  type: string
                                start_time:
                                  type: string
                              type: object
                            tuesday:
                              properties:
                                end_time:
                                  type: string
                                start_time:
                                  type: string
                              type: object
                            wednesday:
                              properties:
                                end_time:
                                  type: string
                                start_time:
                                  type: string
                              type: object
                          type: object
                        title:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/storeResource"
        "403":
          description: "Storekeeper: {storekeeper} already has a store"
  /store-reviews:
    get:
      description: List all store reviews
      responses:
        "200":
          $ref: "./responses.yml#/reviewResources"
  /stores:
    get:
      description: Get the list of stores
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/latitude"
        - $ref: "./parameters.yml#/longitude"
        - $ref: "./parameters.yml#/distance"
        - $ref: "./parameters.yml#/sort"
        - $ref: "./parameters.yml#/filterByCuisine"
        - $ref: "./parameters.yml#/filterByIsActive"
        - $ref: "./parameters.yml#/filterByIsDeleted"
        - $ref: "./parameters.yml#/filterByAcceptingOrders"
        - $ref: "./parameters.yml#/include"
      responses:
        "200":
          $ref: "./responses.yml#/storeResources"
    post:
      description: Create new store entity. For Admins only.
      requestBody:
        description: Store object to create. For description of opening hours visit https://github.com/spatie/opening-hours
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  account_holder_name: Marco Polo
                  account_number: "4815162342"
                  address: Lenina 120
                  bank_location: New york, CA
                  bank_name: Lehmann Brothers
                  contact_name: Wilhelm Conqueror
                  discount:
                    calculation_type: Flat
                    limit: "100"
                    minimum_order: "5"
                    type: All
                    value: "10"
                  email: thats@example.com
                  follows_safety_practices: false
                  image: 1121.jpeg
                  is_auto_print_enabled: false
                  is_print_enabled: true
                  latitude: "0.5"
                  longitude: "7.77"
                  minimum_order: 1
                  delivery_distance: 2
                  packing_charge: "11"
                  payment_email: another@example.com
                  phone_code: "7"
                  phone_number: "8005553535"
                  prepare_time: 10
                  opening_hours:
                    monday:
                      - 00:17-20:11
                    tuesday:
                      - 03:18-15:01
                    wednesday:
                      - 10:22-19:09
                    thursday:
                      - 05:46-13:32
                    friday:
                      - 00:36-17:43
                    saturday:
                      - 03:38-12:39
                    sunday:
                      - 07:57-11:20
                      - 17:57-21:20
                  state: Inactive
                  swift_code: BA1238
                  title: Lenta
                relationships:
                  storekeepers:
                    data:
                      - id: "187"
                        type: storekeepers
                      - id: "189"
                        type: storekeepers
                type: stores
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        account_holder_name:
                          description: optional
                          type: string
                        account_number:
                          description: optional
                          type: string
                        address:
                          type: string
                        bank_location:
                          description: optional
                          type: string
                        bank_name:
                          description: optional
                          type: string
                        commission:
                          type: number
                        contact_name:
                          type: string
                        discount:
                          properties:
                            calculation_type:
                              type: string
                            limit:
                              type: string
                            minimum_order:
                              type: string
                            type:
                              type: string
                            value:
                              type: string
                          type: object
                        email:
                          type: string
                        follows_safety_practices:
                          type: boolean
                        image:
                          type: string
                        is_auto_print_enabled:
                          description: optional
                          type: boolean
                        is_print_enabled:
                          description: optional
                          type: boolean
                        latitude:
                          type: string
                        longitude:
                          type: string
                        minimum_order:
                          type: integer
                        delivery_distance:
                          type: integer
                        packing_charge:
                          type: string
                        payment_email:
                          description: optional
                          type: string
                        phone_code:
                          type: string
                        phone_number:
                          type: string
                        prepare_time:
                          type: integer
                        opening_hours:
                          properties:
                            monday:
                              items:
                                type: string
                              type: array
                            tuesday:
                              items:
                                type: string
                              type: array
                            wednesday:
                              items:
                                type: string
                              type: array
                            thursday:
                              items:
                                type: string
                              type: array
                            friday:
                              items:
                                type: string
                              type: array
                            saturday:
                              items:
                                type: string
                              type: array
                            sunday:
                              items:
                                type: string
                              type: array
                          type: object
                        state:
                          enum:
                            - Active
                            - Inactive
                            - Deleted
                          type: string
                        swift_code:
                          description: optional
                          type: string
                        title:
                          type: string
                      type: object
                    id:
                      type: string
                    relationships:
                      properties:
                        storekeepers:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/storeResource"
  /stores/{id}:
    get:
      description: Get Store data by Id
      parameters:
        - description: id of the store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/latitude"
        - $ref: "./parameters.yml#/longitude"
        - $ref: "./parameters.yml#/include"
      responses:
        "200":
          $ref: "./responses.yml#/storeResource"
    patch:
      description: >-
        Update Store by Id. Only attributes to be changed need to present in
        request. (though it's possible to update phone using this request, you should use /users/{id})
      parameters:
        - description: id of the store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        description: Store object to update. For description of opening hours visit https://github.com/spatie/opening-hours
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  account_holder_name: Wilhelm Conqueror
                  account_number: "4400430280732865"
                  address: Lenina 120
                  bank_location: Kazakhstan
                  bank_name: Kaspi
                  contact_name: Wilhelm Conqueror
                  discount:
                    calculation_type: Flat
                    limit: "100"
                    type: All
                    value: "10"
                  email: thats@example.com
                  follows_safety_practices: false
                  image: 1121.jpeg
                  is_auto_print_enabled: false
                  is_print_enabled: true
                  latitude: "0.5"
                  longitude: "7.77"
                  minimum_order: 1
                  delivery_distance: 2
                  packing_charge: "11"
                  payment_email: thats@example.com
                  phone_code: "7"
                  phone_number: "8005553535"
                  prepare_time: 10
                  opening_hours:
                    monday:
                      - 00:17-20:11
                    tuesday:
                      - 03:18-15:01
                    wednesday:
                      - 10:22-19:09
                    thursday:
                      - 05:46-13:32
                    friday:
                      - 00:36-17:43
                    saturday:
                      - 03:38-12:39
                    sunday:
                      - 07:57-11:20
                      - 17:57-21:20
                  swift_code: KZ31722C000022189028
                  title: Lenta
                relationships:
                  storekeepers:
                    data:
                      - id: "187"
                        type: storekeepers
                      - id: "189"
                        type: storekeepers
                type: stores
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        account_holder_name:
                          type: string
                        account_number:
                          type: string
                        address:
                          type: string
                        bank_location:
                          type: string
                        bank_name:
                          type: string
                        contact_name:
                          type: string
                        discount:
                          properties:
                            calculation_type:
                              type: string
                            limit:
                              type: string
                            type:
                              type: string
                            value:
                              type: string
                          type: object
                        email:
                          type: string
                        follows_safety_practices:
                          type: boolean
                        image:
                          type: string
                        is_auto_print_enabled:
                          type: boolean
                        is_print_enabled:
                          type: boolean
                        latitude:
                          type: string
                        longitude:
                          type: string
                        minimum_order:
                          type: integer
                        delivery_distance:
                          type: integer
                        packing_charge:
                          type: string
                        payment_email:
                          type: string
                        phone_code:
                          type: string
                        phone_number:
                          type: string
                        prepare_time:
                          type: integer
                        opening_hours:
                          properties:
                            monday:
                              items:
                                type: string
                              type: array
                            tuesday:
                              items:
                                type: string
                              type: array
                            wednesday:
                              items:
                                type: string
                              type: array
                            thursday:
                              items:
                                type: string
                              type: array
                            friday:
                              items:
                                type: string
                              type: array
                            saturday:
                              items:
                                type: string
                              type: array
                            sunday:
                              items:
                                type: string
                              type: array
                          type: object
                        swift_code:
                          type: string
                        title:
                          type: string
                      type: object
                    id:
                      type: string
                    relationships:
                      properties:
                        storekeepers:
                          properties:
                            data:
                              items:
                                properties:
                                  id:
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/storeResource"
  /stores/{id}/time-slots:
    get:
      description: Get a list of store time slots for a given date
      parameters:
        - description: id of the Store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/date"
      responses:
        "200":
          $ref: "./responses.yml#/storeTimeSlotsResource"
  /stores/{id}/confirmed-orders:
    post:
      description: Confirm the order
      parameters:
        - description: id of the Store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 1
                type: orders
            schema:
              properties:
                data:
                  properties:
                    id:
                      type: integer
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
  /stores/{id}/declined-orders:
    post:
      description: Decline order
      parameters:
        - description: id of a store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  cancel_reason: No product in stock
                id: 1
                relationships:
                  cancel_reason:
                    data:
                      id: 1
                      type: cancel_reasons
                type: orders
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        cancel_reason:
                          type: string
                      type: object
                    id:
                      type: integer
                    relationships:
                      properties:
                        cancel_reason:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
  /stores/{id}/earnings:
    get:
      description: List annual earnings of the store (12 month)
      parameters:
        - description: Id of the store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/year"
      responses:
        "200":
          $ref: "./responses.yml#/earningResources"
  /stores/{id}/earnings/{date}:
    get:
      description: Get daily earnings of the store
      parameters:
        - description: Id of the store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: Date
          example: 2022-10-31T00:00:00.000Z
          in: path
          name: date
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/earningResource"
        "400":
          $ref: "./responses.yml#/InvalidDateErrorResources"
  /stores/{id}/orders:
    get:
      description: List orders of the store
      parameters:
        - description: Id of the store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/orderFilterOrderType"
        - $ref: "./parameters.yml#/sortOrder"
        - $ref: "./parameters.yml#/filterByStore"
        - $ref: "./parameters.yml#/filterByConsumer"
        - $ref: "./parameters.yml#/filterByCourier"
        - $ref: "./parameters.yml#/filterByPromoCode"
        - $ref: "./parameters.yml#/filterByOrderState"
        - $ref: "./parameters.yml#/includeOrderCollection"
        - description: Starting date of an order filtering interval (in UTC+0)
          example: "2020-01-01"
          in: query
          name: created_from
          required: false
          schema:
            type: string
        - description: Finishing date of an order filtering interval (in UTC+0)
          example: "2020-01-02"
          in: query
          name: created_to
          required: false
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/orderResources"
  /stores/{id}/popular-store-products:
    get:
      description: Get store's products, sorted by their popularity.
      parameters:
        - description: id of a store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/includeStoreProduct"
      responses:
        "200":
          $ref: "./responses.yml#/storeProductResources"
  /stores/{id}/store-product-categories:
    get:
      parameters:
        - description: id of the store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/sortStoreProductCategory"
      responses:
        "200":
          $ref: "./responses.yml#/storeProductCategoryResources"
    post:
      description: Create Product category for store
      parameters:
        - description: id of the store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: Instruments
                type: store_product_categories
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/storeProductCategoryResource"
  /product-categories:
    get:
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/filterByIsActive"
        - $ref: "./parameters.yml#/sortProductCategory"
        - $ref: "./parameters.yml#/includeProductCategory"
      responses:
        "200":
          $ref: "./responses.yml#/productCategoryResources"
    post:
      description: Create Product category
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: Instruments
                type: product_categories
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/productCategoryResource"
  /product-categories/{id}:
    delete:
      description: Delete Product Category. Soft Deletion.
      parameters:
        - description: Product Category Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/productCategoryResource"
    get:
      description: Get Product Category.
      parameters:
        - description: Product Category Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeProductCategory"
      responses:
        "200":
          $ref: "./responses.yml#/productCategoryResource"
    patch:
      description: Update Product Category.
      parameters:
        - description: Product Category Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  title: Instruments
                  is_active: true
                type: product_categories
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                          is_active:
                            type: boolean
                          display_order:
                            type: integer
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/productCategoryResource"
  /product-categories/{id}/product-category-images:
    post:
      description: Create Product Category Image.
      parameters:
        - description: Product Category Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        "201":
          $ref: "./responses.yml#/productCategoryImageResource"
  /product-category-images:
    patch:
      description: Update Product Category Image.
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                image:
                  type: string
                  format: binary
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/productCategoryImageResource"
  /product-subscriptions:
    get:
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/includeProductSubscription"
      responses:
        "200":
          $ref: "./responses.yml#/productSubscriptionResources"
  /product-subscriptions/{id}:
    get:
      description: Get Product Subscription.
      parameters:
        - description: Product Subscription Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeProductSubscription"
      responses:
        "200":
          $ref: "./responses.yml#/productSubscriptionResource"
    patch:
      description: Update Product Subscription.
      parameters:
        - description: Product Subscription Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  created_at: "2020-01-01 00:00:00"
                  updated_at: "2020-01-01 00:00:00"
                type: product_subscriptions
                relationships:
                  products:
                    data:
                      - type: products
                        id: 1
                      - type: products
                        id: 2
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        created_at:
                          format: date-time
                          type: string
                        updated_at:
                          format: date-time
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
                relationships:
                  properties:
                    products:
                      properties:
                        data:
                          items:
                            properties:
                              id:
                                type: string
                              type:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/productSubscriptionResource"
    delete:
      description: Delete Product Subscription. Soft Deletion.
      parameters:
        - description: Product Subscription Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: No Content
  /products:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/sortProduct"
        - $ref: "./parameters.yml#/filterByIsAvailable"
        - $ref: "./parameters.yml#/filterByIsDeleted"
        - $ref: "./parameters.yml#/filterByBrand"
        - $ref: "./parameters.yml#/filterByCuisine"
        - $ref: "./parameters.yml#/filterByDietaryPreference"
        - $ref: "./parameters.yml#/filterByAvailableToCoordinates"
        - $ref: "./parameters.yml#/filterByStoreProductIsActive"
        - $ref: "./parameters.yml#/filterByStoreProductIsAvailable"
        - $ref: "./parameters.yml#/filterByStore"
        - $ref: "./parameters.yml#/filterByProductSubcategoryProductCategory"
        - $ref: "./parameters.yml#/filterByCheapestStoreProductDiscount"
        - $ref: "./parameters.yml#/includeProductCollection"
      responses:
        "200":
          $ref: "./responses.yml#/productResources"
    post:
      security:
        - bearerAuth: []
      description: Create Product
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: products
                attributes:
                  title: Bread
                  title_translations:
                    en: Bread
                  description: Good white
                  description_translations:
                    en: Good white
                  nutrition_facts:
                    carbs: "60"
                    fats: "0"
                    protein: "1"
                  gtin: "4605246016707"
                  is_taxable: true
                  dimension: 43.5
                relationships:
                  product_subcategory:
                    data:
                      id: 2
                      type: product_subcategories
                  measurement_unit:
                    data:
                      id: 1
                      type: measurement_units
                  accessory_products:
                    data: [{ id: 2, type: products }, { id: 3, type: products }]
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/productResource"
  /products:search:
    get:
      description: Search products by title
      parameters:
        - description: Search query
          example: "bread"
          in: query
          name: q
          required: true
          schema:
            type: string
        - $ref: "./parameters.yml#/filterByStore"
        - $ref: "./parameters.yml#/filterByStoreProductIsActive"
        - $ref: "./parameters.yml#/filterByStoreProductIsAvailable"
        - $ref: "./parameters.yml#/filterByProductSubcategoryProductCategory"
        - $ref: "./parameters.yml#/filterByCheapestStoreProductDiscount"
      responses:
        "200":
          $ref: "./responses.yml#/productResources"
  /products/{id}:
    delete:
      security:
        - bearerAuth: []
      description: Delete Product. Soft Deletion.
      parameters:
        - description: Product Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
    get:
      security:
        - bearerAuth: []
      description: Get Product.
      parameters:
        - description: Product Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeProduct"
      responses:
        "200":
          $ref: "./responses.yml#/productResource"
    patch:
      security:
        - bearerAuth: []
      description: Update Product.
      parameters:
        - description: Product Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: products
                attributes:
                  title: Bread
                  title_translations:
                    en: Bread
                  description: Good white
                  description_translations:
                    en: Good white
                  nutrition_facts:
                    carbs: "60"
                    fats: "0"
                    protein: "1"
                  gtin: "4605246016707"
                  is_active: true
                  is_taxable: false
                  dimension: 45.3
                  deleted_at: null
                relationships:
                  product_subcategory:
                    data:
                      id: 2
                      type: product_subcategories
                  measurement_unit:
                    data:
                      id: 2
                      type: measurement_units
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/productResource"
  /products/{id}/store-products:
    get:
      description: Get a list of store products for a given product
      parameters:
        - description: id of the Product
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/includeProduct"
        - $ref: "./parameters.yml#/sortStoreProduct"
      responses:
        "200":
          $ref: "./responses.yml#/storeProductResources"
  /duplicates-removed-products:
    post:
      security:
        - bearerAuth: []
      description: Delete duplicated products & assign store products to product
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: "duplicate_products"
                id: 1
                duplicate_products:
                  data: [{ id: 2, type: products }, { id: 3, type: products }]
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/productResource"
  /products/{id}/accessory-products:
    get:
      description: Get a list of accessory products for a given product
      parameters:
        - description: id of the Product
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/includeProduct"
      responses:
        "200":
          $ref: "./responses.yml#/productResources"
  /products/{id}/recipes:
    get:
      description: Get a list of recipes for a given product
      parameters:
        - description: id of the Product
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/includeRecipe"
      responses:
        "200":
          $ref: "./responses.yml#/recipeResources"
  /stores/{id}/recommended-store-products:
    get:
      description: List recommended products for a store
      parameters:
        - description: Id of the store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/products"
        - $ref: "./parameters.yml#/includeStoreProduct"
      responses:
        "200":
          $ref: "./responses.yml#/storeProductResources"
  /stores/{id}/review:
    get:
      description: Get reviews of the store
      parameters:
        - description: id of the store
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
      responses:
        "200":
          $ref: "./responses.yml#/reviewResources"
  /stores/{id}/store-images:
    post:
      description: Add Image to Store
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
          description: Id of the store
        - $ref: "./parameters.yml#/include"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        201:
          $ref: "./responses.yml#/storeImageResource"
  /stores:search:
    get:
      description: Search the stores by name
      parameters:
        - description: Search query
          example: groceries
          in: query
          name: q
          required: true
          schema:
            type: string
        - $ref: "./parameters.yml#/include"
      responses:
        "200":
          $ref: "./responses.yml#/storeResources"
  /supplemented-orders:
    post:
      description:
        Increase the quantity of products or add new items to the order.
        Can't be used to update anything except the order items (addresses, promo codes, etc.).
        Only the order in the state "placed" can be updated.
        As a JSON body to the post request the endpoint expects all new contents of the cart (including not changed).
        The difference will be calculated by the backend automatically.
        The endpoint updates the order entity, the order items collection, recalculates totals,
        sends the request for additional payment to stripe and creates corresponding payment entity with type "OrderPayment".
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                id: 42
                type: orders
                attributes:
                  cart:
                    - quantity: "3"
                      store_product_id: "1"
                    - quantity: "1"
                      store_product_id: "3"
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        cart:
                          items:
                            properties:
                              store_product_id:
                                type: integer
                              quantity:
                                type: number
                            required:
                              - quantity
                              - store_product_id
                            type: object
                          type: array
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/orderResource"
        "422":
          $ref: "./responses.yml#/lowOrderTotalExceptionResources"
      security:
        - bearerAuth: []
  /support-chats:
    get:
      description: List support chats
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/includeUser"
        - $ref: "./parameters.yml#/includeChat"
        - $ref: "./parameters.yml#/sortSupportChat"
        - $ref: "./parameters.yml#/filterByIsActive"
        - $ref: "./parameters.yml#/filterByUser"
      responses:
        "200":
          $ref: "./responses.yml#/supportChatResources"
    post:
      description: Create support chat
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: support_chats
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                  type: object
              type: object
      responses:
        "201":
          $ref: "./responses.yml#/supportChatResource"
  /tip-suggestions:
    get:
      description:
        List tip suggestions. Can be filtered by country code of the corresponding tip suggestion section
        and by the subtotal (corresponding to the tip suggestion section).
      parameters:
        - $ref: "./parameters.yml#/filterBySubtotal"
        - $ref: "./parameters.yml#/filterByCountryCode"
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
      responses:
        "200":
          $ref: "./responses.yml#/tipSuggestionResources"
    post:
      security:
        - bearerAuth: []
      description: >-
        Create tip suggestion entity. Each tip suggestion segment may have not more than 3 options.
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  value: "5.00"
                  type: "flat"
                type: tip_suggestions
                relationships:
                  tip_suggestion_segment:
                    data:
                      id: 1
                      type: tip_suggestion_segments
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        value:
                          type: string
                        type:
                          type: string
                          enum:
                            - flat
                            - percentage
                      type: object
                    type:
                      type: string
                    relationships:
                      properties:
                        tip_suggestion_segment:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/tipSuggestionResource"
  /tip-suggestions/{id}:
    get:
      security:
        - bearerAuth: []
      description: Get tip suggestion by id
      parameters:
        - description: id of tip suggestion
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/tipSuggestionResource"
    patch:
      description: >-
        Update tip suggestion resource. Only attributes to be changed need to present
        in request.
      security:
        - bearerAuth: []
      parameters:
        - description: id of tip suggestion
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  value: "12.34"
                  type: "flat"
                type: tip_suggestions
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        value:
                          type: string
                        type:
                          type: string
                          enum:
                            - flat
                            - percentage
                      type: object
                    id:
                      type: integer
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/tipSuggestionResource"
    delete:
      description: Hard deletion of the tip suggestion
      security:
        - bearerAuth: []
      parameters:
        - description: Tip suggestion id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /tip-suggestion-segments:
    get:
      description:
        List tip suggestion segments.
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
      responses:
        "200":
          $ref: "./responses.yml#/tipSuggestionSegmentResources"
    post:
      security:
        - bearerAuth: []
      description: >-
        Create tip suggestion Segment entity.
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  country_code: "US"
                  lower_bound: "0.00"
                type: tip_suggestion_segments
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        country_code:
                          type: string
                        lower_bound:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/tipSuggestionSegmentResource"
  /tip-suggestion-segments/{id}:
    get:
      security:
        - bearerAuth: []
      description: Get tip suggestion segment by id
      parameters:
        - description: id of tip suggestion segment
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/tipSuggestionSegmentResource"
    patch:
      description: >-
        Update tip suggestion segment resource. Only attributes to be changed need to present
        in request.
      security:
        - bearerAuth: []
      parameters:
        - description: id of tip suggestion segment
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  country_code: "US"
                  lower_bound: "0.00"
                type: tip_suggestion_segments
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        country_code:
                          type: string
                        lower_bound:
                          type: string
                      type: object
                    id:
                      type: integer
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/tipSuggestionSegmentResource"
    delete:
      description: Hard deletion of the tip suggestion segment
      security:
        - bearerAuth: []
      parameters:
        - description: Tip suggestion segment id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /trip-locations/{id}:
    patch:
      description: Update trip location of a trip.
      parameters:
        - description: id of Trip's Location
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  latitude: "51.1605"
                  longitude: "71.4704"
                id: 1
                type: trip_locations
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        latitude:
                          type: string
                        longitude:
                          type: string
                      type: object
                    id:
                      type: integer
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/tripLocationResource"
  /trip-state-messages/{id}:
    patch:
      description: Update trip state messages state
      parameters:
        - description: Id of the trip state message
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  is_received: true
                type: trip_state_messages
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        is_received:
                          type: boolean
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/tripStateMessageResource"
  /trips/{id}:
    get:
      description: Get the trip information
      parameters:
        - description: Id of the order
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeTrip"
      responses:
        "200":
          $ref: "./responses.yml#/tripResource"
  /trips/{id}/trip-locations:
    post:
      description: Set trip location to a trip.
      parameters:
        - description: id of Trip
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  latitude: "51.1605"
                  longitude: "71.4704"
                type: trip_locations
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        latitude:
                          type: string
                        longitude:
                          type: string
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/tripLocationResource"
  /two-factor-challenge:
    post:
      description: Two factor authentication
      requestBody:
        content:
          application/json:
            example:
              code: 123456
              recovery_code: WJaH3PT1TD-V0rqnAUTic
            schema:
              properties:
                code:
                  type: string
                recovery_code:
                  type: string
        required: true
      responses:
        "204":
          description: Successful two factor authentication
        "422":
          description: Unsuccessful two factor authentication
          content:
            application/json:
              example:
                message: "The provided two factor authentication code was invalid."
                errors:
                  password:
                    - "The provided two factor authentication code was invalid."
              schema:
                properties:
                  message:
                    type: string
                  errors:
                    type: array
  /user/confirm-password:
    post:
      description: Confirm user's password
      requestBody:
        content:
          application/json:
            example:
              password: 12345678
            schema:
              properties:
                password:
                  type: string
        required: true
      responses:
        "201":
          description: Password matches the user's current password
        "422":
          description: Request was not successful
          content:
            application/json:
              example:
                message: "The provided password was incorrect."
                errors:
                  password:
                    - "The provided password was incorrect."
              schema:
                properties:
                  message:
                    type: string
                  errors:
                    type: array
  /user/confirmed-two-factor-authentication:
    post:
      description: Confirm two factor authentication configuration
      requestBody:
        content:
          application/json:
            example:
              code: 123456
            schema:
              properties:
                code:
                  type: string
        required: true
      responses:
        "200":
          description: Successful two factor authentication confirmation
  /user/two-factor-authentication:
    post:
      description: Enable two factor authentication
      responses:
        "200":
          description: Two factor authentication enabled
    delete:
      description: Disable two factor authentication
      responses:
        "200":
          description: Two factor authentication disabled
  /user/two-factor-qr-code:
    get:
      description: Retrieve the user's two factor authentication QR code
      responses:
        "200":
          description: User's two factor authentication QR code
          content:
            application/json:
              example:
                svg: "{{svg xml}}"
              schema:
                properties:
                  svg:
                    type: string

  /user/two-factor-recovery-codes:
    get:
      description: Retrieve the user's recovery codes
      responses:
        "200":
          description: User's recovery codes
          content:
            application/json:
              example:
                - "WJaH3PT1TD-V0rqnAUTic"
                - "87X64FUKmJ-oIp3CuHbpu"
                - "siZ4repifS-TBihLHYh78"
              schema:
                type: array
    post:
      description: Regenerate the user's recovery codes
      responses:
        "200":
          description: Successfully regenerated the user's recovery codes
  /users:
    get:
      description: List users
      parameters:
        - $ref: "./parameters.yml#/includeUserable"
      responses:
        "200":
          $ref: "./responses.yml#/userResources"
    post:
      parameters:
        - $ref: "./parameters.yml#/referralCode"
      description: Create a new User
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  email: alan@example.com
                  name: Alan Turing
                  password: "123456"
                  phone: "+13123333333"
                type: users
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        email:
                          type: string
                        name:
                          type: string
                        password:
                          type: string
                        phone:
                          type: string
                      type: object
                    relationships:
                      properties:
                        userable:
                          properties:
                            data:
                              properties:
                                lid:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "201":
          $ref: "./responses.yml#/userResource"
  /users:search:
    get:
      description: Search users by name, email
      parameters:
        - description: Search query
          example: Storekeeper
          in: query
          name: q
          required: true
          schema:
            type: string
        - $ref: "./parameters.yml#/filterByUserableType"
      responses:
        "200":
          $ref: "./responses.yml#/userResources"
  /users/{id}:
    get:
      parameters:
        - description: User's id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeUserable"
      responses:
        "200":
          $ref: "./responses.yml#/userResource"
    patch:
      description: Update the user resource
      security:
        - bearerAuth: []
      parameters:
        - description: User id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attribuites:
                      type: object
                      properties:
                        name:
                          type: string
                        phone:
                          type: string
                        email:
                          type: string
                        is_test_user:
                          type: boolean
                        is_active:
                          type: boolean
                        subscriptions:
                          items:
                            properties:
                              notification_type:
                                type: string
                              is_subscribed:
                                type: boolean
                            type: object
                          type: array
            example:
              data:
                type: users
                attributes:
                  name: "Alan Turing"
                  phone: "+13123333333"
                  email: "alan@example.com"
                  is_active: true
                  subscriptions:
                    - notification_type: "mail"
                      is_subscribed: true
      responses:
        "200":
          $ref: "./responses.yml#/userResource"
  /users/{id}/administrators:
    post:
      description: >-
        Assign User to be Administrator. Only other administrator is able to
        assign other user to be admin.
      parameters:
        - description: id of User
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  phone_code: "3842"
                  phone_number: "606604"
                id: 112
                type: administrators
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        phone_code:
                          type: string
                        phone_number:
                          type: string
                      type: object
                    id:
                      type: integer
                    relationships:
                      properties:
                        user:
                          properties:
                            id:
                              type: integer
                            type:
                              type: string
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/administratorResource"
  /users/{id}/chats:
    get:
      description: List user's chats
      parameters:
        - description: id of a user
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/chatResources"
  /users/{id}/consumers:
    post:
      description: Create Consumer for a given user
      parameters:
        - description: id of a user for whom the consumer object will be created
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  app_version: "1"
                  app_version_code: 1.0.3
                  country: US
                  device_os: iOS
                  firebase_token: cfroPkne
                  phone_code: "1"
                  phone_number: "1212121212"
                  referral_code: dryjdh71700
                id: 1
                type: consumers
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        app_version:
                          type: string
                        app_version_code:
                          type: string
                        country:
                          type: string
                        device_os:
                          type: string
                        firebase_token:
                          type: string
                        phone_code:
                          type: string
                        phone_number:
                          type: string
                        referral_code:
                          type: string
                      type: object
                    id:
                      type: integer
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "201":
          $ref: "./responses.yml#/consumerResource"
  /users/{id}/couriers:
    post:
      description: Create Courier for a given user (though it's possible to update phone using this request, you should use /users/{id})
      parameters:
        - description: id of a user for whom the courier object will be created
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                attributes:
                  app_version: "1"
                  app_version_code: 1.0.3
                  country: US
                  device_os: iOS
                  firebase_token: cfroPkne
                  first_name: Alan
                  last_name: Turing
                  latitude: 0
                  longitude: 0
                  phone_code: "1"
                  phone_number: "1212121212"
                id: 1
                type: couriers
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        app_version:
                          type: string
                        app_version_code:
                          type: string
                        country:
                          type: string
                        device_data:
                          type: string
                        device_os:
                          type: string
                        firebase_token:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        latitude:
                          type: number
                        longitude:
                          type: number
                        phone_code:
                          type: string
                        phone_number:
                          type: string
                      type: object
                    id:
                      type: integer
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "201":
          $ref: "./responses.yml#/courierResource"
  /users/{id}/notifications:
    get:
      description: Get notifications sent to a user
      parameters:
        - description: id of a user
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: "null to filter unread notification by read_at"
          example: "null"
          in: query
          name: filter[read_at]
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.api+json:
              example:
                data:
                  id: 1be8c078-cbd2-4c0b-97ab-45b01b8dfc98
                  type: notifications
                  attributes:
                    data:
                      title: Title
                      body: Body
                    created_at: "2023-02-06T14:14:56.000000Z"
                    updated_at: "2023-02-06T14:14:56.000000Z"
                    read_at: "2023-02-06T14:18:56.000000Z"
                links:
                meta:
                  current_page: 1
                  from: 1
                  last_page: 1
                  links:
                    - url: null
                      label: "&laquo; Previous"
                      active: false
                    - url: "http://0.0.0.0/users/2/notifications?page=1"
                      label: 1
                      active: true
                    - url: null
                      label: "Next &raquo;"
                      active: false
                  path: "http://0.0.0.0/users/2/notifications"
                  per_page: 10
                  to: 4
                  total: 4
              schema:
                properties:
                  data:
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        properties:
                          data:
                            type: string
                          created_at:
                            format: date-time
                            type: string
                          updated_at:
                            format: date-time
                            type: string
                          read_at:
                            format: date-time
                            type: string
                        type: object
                    type: object
                type: object
          description: successful
    post:
      description: Send notifications to a user
      parameters:
        - description: id of a user to notify
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                title: Title
                body: Body
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    attributes:
                      properties:
                        title:
                          type: string
                        body:
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "201":
          content:
            application/vnd.api+json:
              example:
                data:
                  attributes:
                    status: "Notification sent"
                  type: "notifications"
              schema:
                properties:
                  data:
                    properties:
                      attributes:
                        properties:
                          status:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                type: object
          description: successful
  /users/{id}/product-subscriptions:
    post:
      description: Create ProductSubscription for a given user
      parameters:
        - description: id of a user for whom the product subscription object will be created
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: product_subscriptions
                relationships:
                  products:
                    data:
                      - type: products
                        id: 1
                      - type: products
                        id: 2
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                    relationships:
                      properties:
                        products:
                          properties:
                            data:
                              type: array
                              items:
                                properties:
                                  type:
                                    type: string
                                  id:
                                    type: integer
                          type: object
                  type: object
              type: object
        required: true
      responses:
        "201":
          $ref: "./responses.yml#/productSubscriptionResource"
  /users/{id}/storekeepers:
    post:
      description: Create Storekeeper for a given user
      parameters:
        - description: id of a user for whom the storekeeper object will be created
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: storekeepers
            schema:
              properties:
                data:
                  properties:
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "201":
          $ref: "./responses.yml#/storekeeperResource"
  /vehicle-makes:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/sortVehicleMake"
      description: Get the list of all vehicle makes
      responses:
        "200":
          $ref: "./responses.yml#/vehicleMakeResources"
    post:
      security:
        - bearerAuth: []
      description: Add the vehicle make entity
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attribuites:
                      type: object
                      properties:
                        title:
                          type: string
            example:
              data:
                type: vehicle_makes
                attributes:
                  title: LADA
      responses:
        "201":
          $ref: "./responses.yml#/vehicleMakeResource"
  /vehicle-makes:search:
    get:
      description: Search vehicle makes by title
      parameters:
        - description: Search query
          example: 123
          in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/vehicleMakeResources"
  /vehicle-makes/{id}:
    get:
      description: Get the vehicle make resource
      security:
        - bearerAuth: []
      parameters:
        - description: Vehicle make id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/vehicleMakeResource"
    patch:
      description: Update the vehicle make resource
      security:
        - bearerAuth: []
      parameters:
        - description: Vehicle make id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attribuites:
                      type: object
                      properties:
                        title:
                          type: string
                        is_active:
                          type: boolean
            example:
              data:
                type: vehicle_makes
                attributes:
                  title: LADA
                  is_active: true
      responses:
        "200":
          $ref: "./responses.yml#/vehicleMakeResource"
    delete:
      description: Mark the vehicle make resource as deleted
      security:
        - bearerAuth: []
      parameters:
        - description: Vehicle make id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/vehicleMakeResource"
  /vehicle-makes/{id}/vehicle-models:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - description: Vehicle make id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/sortVehicleModel"
      description: Get the paginated list of all vehicle models of the particular vehicle make
      responses:
        "200":
          $ref: "./responses.yml#/vehicleModelResources"
    post:
      security:
        - bearerAuth: []
      parameters:
        - description: Vehicle make id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      description: Add the vehicle model entity
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attribuites:
                      type: object
                      properties:
                        title:
                          type: string
            example:
              data:
                type: vehicle_models
                attributes:
                  title: "2111"
      responses:
        "201":
          $ref: "./responses.yml#/vehicleModelResource"
  /vehicle-models:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/sortVehicleModel"
      description: Get the list of all vehicle models
      responses:
        "200":
          $ref: "./responses.yml#/vehicleModelResources"
  /vehicle-models:search:
    get:
      description: Search vehicle models by title
      parameters:
        - description: Search query
          example: 123
          in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/vehicleModelResources"
  /vehicle-models/{id}:
    get:
      security:
        - bearerAuth: []
      parameters:
        - description: Vehicle model id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      description: Get the particular vehicle model resource
      responses:
        "200":
          $ref: "./responses.yml#/vehicleModelResource"
    patch:
      description: Update the vehicle model resource
      security:
        - bearerAuth: []
      parameters:
        - description: Vehicle model id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attribuites:
                      type: object
                      properties:
                        title:
                          type: string
                        is_active:
                          type: boolean
                    relationships:
                      type: object
                      properties:
                        vehicle_make:
                          type: object
                          properties:
                            data:
                              type: object
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
            example:
              data:
                type: vehicle_models
                attributes:
                  title: "2101"
                  is_active: true
                relationships:
                  vehicle_make:
                    data:
                      id: 5
                      type: vehicle_makes
      responses:
        "200":
          $ref: "./responses.yml#/vehicleModelResource"
    delete:
      description: Mark the vehicle make resource as deleted
      security:
        - bearerAuth: []
      parameters:
        - description: Vehicle model id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/vehicleModelResource"
  /vehicle-images/{id}:
    get:
      description: Get vehicle image
      parameters:
        - description: vehicle image id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            image/*:
              schema:
                properties:
                  image:
                    type: string
                    format: binary
                type: object
          description: successful
    post:
      description: Update vehicle image
      parameters:
        - description: vehicle image id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: method
          example: PATCH
          in: query
          name: _method
          required: true
          schema:
            enum:
              - PATCH
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          $ref: "./responses.yml#/vehicleImageResource"
    delete:
      description: Delete vehicle image
      parameters:
        - description: vehicle image id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /vehicle-insurance-images/{id}:
    get:
      description: Get vehicle insurance image
      parameters:
        - description: vehicle insurance image id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            image/*:
              schema:
                properties:
                  image:
                    type: string
                    format: binary
                type: object
          description: successful
    post:
      description: Update vehicle insurance image
      parameters:
        - description: vehicle insurance image id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: method
          example: PATCH
          in: query
          name: _method
          required: true
          schema:
            enum:
              - PATCH
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          $ref: "./responses.yml#/vehicleInsuranceImageResource"
    delete:
      description: Delete vehicle insurance image
      parameters:
        - description: vehicle insurance image id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /vehicle-registration-images/{id}:
    get:
      description: Get vehicle registration image
      parameters:
        - description: vehicle registration image id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          content:
            image/*:
              schema:
                properties:
                  image:
                    type: string
                    format: binary
                type: object
          description: successful
    post:
      description: Update vehicle registration image
      parameters:
        - description: vehicle registration image id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - description: method
          example: PATCH
          in: query
          name: _method
          required: true
          schema:
            enum:
              - PATCH
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          $ref: "./responses.yml#/vehicleRegistrationImageResource"
    delete:
      description: Delete vehicle registration image
      parameters:
        - description: vehicle registration image id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
  /vehicles:
    get:
      security:
        - bearerAuth: []
      description: Get the list of all vehicles
      parameters:
        - $ref: "./parameters.yml#/includeVehicle"
      responses:
        "200":
          $ref: "./responses.yml#/vehicleResource"
  /vehicles/{id}:
    delete:
      description: Soft delete Vehicle object
      parameters:
        - description: Id of a vehicle
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/vehicleResource"
    get:
      security:
        - bearerAuth: []
      description: Get the particular vehicle resource
      parameters:
        - description: Vehicle id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeVehicle"
      responses:
        "200":
          $ref: "./responses.yml#/vehicleResource"
    patch:
      security:
        - bearerAuth: []
      description: Update a Vehicle of Courier
      parameters:
        - description: id of the vehicle
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: vehicles
                attributes:
                  year: 1995
                  license_plate: A45VF
                  color: blue
                  is_active: true
                relationships:
                  make:
                    data:
                      id: 5
                      type: vehicle_makes
                  model:
                    data:
                      id: 3
                      type: vehicle_models
                  type:
                    data:
                      id: 3
                      type: vehicle_types
            schema:
              properties:
                data:
                  properties:
                    attributes:
                      properties:
                        color:
                          type: string
                        is_active:
                          type: boolean
                        license_plate:
                          type: string
                        year:
                          type: integer
                      type: object
                    id:
                      type: integer
                    relationships:
                      properties:
                        vehicle_make:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        vehicle_model:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                        vehicle_type:
                          properties:
                            data:
                              properties:
                                id:
                                  type: integer
                                type:
                                  type: string
                              type: object
                          type: object
                      type: object
                    type:
                      type: string
                  type: object
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/vehicleResource"
  /vehicles/{id}/vehicle-images:
    get:
      description: Get list of order's vehicle images
      parameters:
        - description: order id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/vehicleImageResources"
    post:
      description: Create vehicle image
      parameters:
        - description: vehicle id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "201":
          $ref: "./responses.yml#/vehicleImageResource"
  /vehicles/{id}/vehicle-insurance-images:
    post:
      description: Create vehicle insurance image
      parameters:
        - description: vehicle id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "201":
          $ref: "./responses.yml#/vehicleInsuranceImageResource"
  /vehicle-types:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
      description: Get the paginated list of all vehicle types
      responses:
        "200":
          $ref: "./responses.yml#/vehicleTypeResources"
    post:
      security:
        - bearerAuth: []
      description: Add the vehicle type entity
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attribuites:
                      type: object
                      properties:
                        title:
                          type: string
                        radius:
                          type: number
            example:
              data:
                type: vehicle_types
                attributes:
                  title: Horse
                  radius: 20.0
      responses:
        "201":
          $ref: "./responses.yml#/vehicleTypeResource"
  /vehicle-types/{id}:
    get:
      description: Get the vehicle type resource
      security:
        - bearerAuth: []
      parameters:
        - description: Vehicle type id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/vehicleTypeResource"
    patch:
      description: Update the vehicle type resource
      security:
        - bearerAuth: []
      parameters:
        - description: Vehicle type id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                    attribuites:
                      type: object
                      properties:
                        title:
                          type: string
                        radius:
                          type: number
                        is_active:
                          type: boolean
            example:
              data:
                type: vehicle_types
                attributes:
                  title: Horse
                  radius: 20.0
                  is_active: true
      responses:
        "200":
          $ref: "./responses.yml#/vehicleTypeResource"
    delete:
      description: Mark the vehicle type resource as deleted
      security:
        - bearerAuth: []
      parameters:
        - description: Vehicle type id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "./responses.yml#/vehicleTypeResource"
  /product-requests:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/includeProductRequestCollection"
      responses:
        "200":
          $ref: "./responses.yml#/productRequestResources"
  /products-requests/{id}:
    delete:
      security:
        - bearerAuth: []
      description: Delete Product Request. Soft Deletion.
      parameters:
        - description: Product Request Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
    get:
      security:
        - bearerAuth: []
      description: Get Product Request.
      parameters:
        - description: Product Request Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeProductRequest"
      responses:
        "200":
          $ref: "./responses.yml#/productRequestResource"
    patch:
      security:
        - bearerAuth: []
      description: Update Product Request.
      parameters:
        - description: Product Request Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: products
                attributes:
                  title: Bread
                  state: "fulfilled"
                  description: Good white
                relationships:
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/productRequestResource"

  /product-reports:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/includeProductReportCollection"
      responses:
        "200":
          $ref: "./responses.yml#/productReportResources"
  /products-reports/{id}:
    delete:
      security:
        - bearerAuth: []
      description: Delete Product Report. Soft Deletion.
      parameters:
        - description: Product Report Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
    get:
      security:
        - bearerAuth: []
      description: Get Product Report.
      parameters:
        - description: Product Report Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: "./parameters.yml#/includeProductReportResource"
      responses:
        "200":
          $ref: "./responses.yml#/productReportResource"
    patch:
      security:
        - bearerAuth: []
      description: Update Product Report.
      parameters:
        - description: Product Report Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: product_reports
                attributes:
                  state: "resolved"
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/productReportResource"

  /consumers/{consumerId}/product-requests:
    get:
      security:
        - bearerAuth: []
      parameters:
        - $ref: "./parameters.yml#/limit"
        - $ref: "./parameters.yml#/page"
        - $ref: "./parameters.yml#/includeProductRequestCollection"
      responses:
        "200":
          $ref: "./responses.yml#/productRequestResources"
    post:
      security:
        - bearerAuth: []
      description: Create Product Request
      requestBody:
        content:
          application/vnd.api+json:
            example:
              data:
                type: product_requests
                attributes:
                  title: Bread
                  description: Good white
                relationships:
            schema:
              properties:
                data:
                  items:
                    properties:
                      attributes:
                        properties:
                          title:
                            type: string
                        type: object
                      type:
                        type: string
                    type: object
                  type: array
              type: object
        required: true
      responses:
        "200":
          $ref: "./responses.yml#/productRequestResource"
  /products-requests/{id}/product-request-images:
    post:
      security:
        - bearerAuth: []
      description: Create Product Request Image
      parameters:
        - description: Product Request Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "201":
          $ref: "./responses.yml#/productRequestImageResource"

  /products-request-images/{id}:
    delete:
      security:
        - bearerAuth: []
      description: Delete Product Request Image. Soft Deletion.
      parameters:
        - description: Product Request Image Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No content
    patch:
      security:
        - bearerAuth: []
      description: Update Product Request Image.
      parameters:
        - description: Product Request Image Id
          example: 1
          in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          $ref: "./responses.yml#/productRequestImageResource"
  /product-requests:search:
    get:
      security:
        - bearerAuth: []
      parameters:
        - description: Search query
          example: 123
          in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "./responses.yml#/productRequestResources"
